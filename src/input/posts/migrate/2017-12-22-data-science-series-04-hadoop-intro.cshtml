Title: "[Data Science 到底是什麼從一個完全外行角度來看][04]Hadoop是什麼？"
Published: 2017-12-22
Modified: 2017-12-23
Image: /posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb(63).png
Tags: ["hadoop","「data science 到底是什麼從一個完全外行角度來看」","data science"]
RedirectFrom: 2017/12/data-science-series-04-hadoop-intro.html
Series: ["「Data Science 到底是什麼從一個完全外行角度來看」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-JvGVjQKkStM/Wj0WEEvnw8I/AAAAAAAAXLc/7IY0rL8Ds2ABhQJndi3E0rjnJtdAD_L9gCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb(63).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/books-spine-colors-pastel-1099067/ 和 https://pixabay.com/en/math-blackboard-education-classroom-1547018/</figcaption><br></figure></section><section><p>在上一篇（<a href="http://blog.alantsai.net/2017/12/data-science-series-03-big-data-intro.html">[03]Big Data到底是有多Big？</a>）了解到了Big Data的3個V，也就是量、增長速度和多元格式的挑戰，這篇來看看讓管理一切變得有可能的軟體：Hadoop。   </p><p>這篇將介紹Hadoop的由來，為什麼這麼重要，不同版本之間的差異，和基本架構。   </p></section>   <section> <a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426247202" ;="">Hadoop的歷史</a><br></li><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426248502" ;="">Hadoop的特色</a><br></li><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426249243" ;="">Hadoop的版本</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426249384" ;="">0.x 和 1.x 版本</a><br></li><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426249870" ;="">2.x版本</a><br></li><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426249442" ;="">3.x版本</a><br></li></ul><li><a style="line-height: 1.6;" href="#WizKMOutline_1513952426250703" ;="">結語</a><br></li></ul></div></section>   <a name="more"></a>   <section><h2 id="WizKMOutline_1513952426247202">Hadoop的歷史</h2><figure><figcaption><a href="https://lh3.googleusercontent.com/-g0RN6sBPOmI/Wj0WHZbvuPI/AAAAAAAAXLk/bTp4g-IHQd8FaDlFfQ20jS3vFI3knIIcgCHMYCw/s1600-h/image%255B5%255D"><img width="654" height="248" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb[1](55).png" border="0" class="img-responsive"></a><br>hadoop的logo - 黃色大象</figcaption></figure><p>相信對於Hadoop這個詞應該不會陌生，畢竟Hadoop不算是新的東西，自2006誕生以來已經有11年的時間，因為Big Data的關係，多多少少都會提到它。   </p><p>Hadoop的誕生是因為Google release了一份paper，裡面描述了Google內部的<em>MapReduce</em>（運算）和<em>Google File System</em>（儲存）的運作概念，然後由<em>Doug Cutting</em>用Java把它實作出來，並且用他兒子的   黃色大象玩具的名字命名，因此Hadoop就誕生了。   </p></section><section><h2 id="WizKMOutline_1513952426248502">Hadoop的特色</h2><p>基本上，Hadoop提供了一個用串聯<em>一般</em>電腦來達到處理Big Data所需要的<em>儲存</em>和<em>運算</em>。   </p><p>這邊，<em><strong>一般電腦</strong></em>非常重要，因為意味著<em>不需要</em>超級電腦就可以裝。一般來說，Scale up（把單一硬體加大）永遠是比Scale Out（平行擴展多台串聯）還要來的貴很多。   </p><p>因此，當提到Big Data的時候，都會提到Hadoop，因為Hadoop讓儲存大資料量和運算大資料量變得親民。   </p><p>Hadoop，有兩個重要的核心：   </p><ol><li>Hadoop Distributed File System（HDFS） - 分散式儲存資料</li><li>MapReduce - 分散式運算</li></ol></section><section><h2 id="WizKMOutline_1513952426249243">Hadoop的版本</h2><p>基本上Hadoop有3個版本：   </p><ol><li>0.x 和1.x 版本 - 基本上應該沒人再用了</li><li>2.x 版本</li><li>3.x 版本</li></ol><p>除了大版號的差異之外，小版本之間也是有在maintain，下面可以看到光2.x版本就有4個不同branch。   </p><figure><a href="https://lh3.googleusercontent.com/-zKT6Xm9aQwc/Wj0WKc5-z2I/AAAAAAAAXLs/SGKgXknExwsPrrhH1OfSs6_bn-oMDOaewCHMYCw/s1600-h/image%255B8%255D"><img width="654" height="392" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb[2](45).png" border="0" class="img-responsive"></a><br><figcaption>目前有在maintain的版本</figcaption></figure><section><h3 id="WizKMOutline_1513952426249384">0.x 和 1.x 版本</h3><p>最早出來的版本基本結構如下：    </p><figure><a href="https://lh3.googleusercontent.com/-nHcBOfmPH9o/Wj0WOaS7P7I/AAAAAAAAXL0/Wt7ufLdqzUwKRbg1U2WHPlhGPNcYHUrZwCHMYCw/s1600-h/image%255B11%255D"><img width="260" height="294" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb[3](42).png" border="0" class="img-responsive"></a><br><figcaption>0.x和1.x版本的架構</figcaption></figure><p>可以看到，當初只有兩個最重要的核心：    </p><ol><li>HDFS</li><li>MapReduce</li></ol><p>其他第三方的應用，例如HIVE（hadoop上面的SQL）則需要<em>自己處理</em>和底層Hadoop的溝通。換句話說，假設別的套件之間要溝通，基本上做不到，或者要花很多工，因為兩者之間<em>沒有一個共通的頻道</em>。    </p><p>還有另外一個問題是，Hadoop屬於一個Master多個Slave的架構，換句話說，當Master掛掉了，整個就掛掉了，因此有<em>Single Point Of Failure</em>的問題。    </p><p>因此2.x出現了。    </p></section><section><h3 id="WizKMOutline_1513952426249870">2.x版本</h3><p>因為互相之間溝通困難的問題，因此在2.x版本多出了所謂的<strong><em>Yet Another Resource Manager (YARN)</em></strong></p><p>因此架構變成了：    </p><figure><a href="https://lh3.googleusercontent.com/-ef-HQcFkX10/Wj0WRG2aYvI/AAAAAAAAXL8/AyxKfsokDrYp8iFZSlwQ2vHF-bCiQlCPwCHMYCw/s1600-h/image%255B14%255D"><img width="328" height="427" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-12-22-data-science-series-04-hadoop-intro_Asset/image_thumb[4](42).png" border="0" class="img-responsive"></a><br><figcaption>2.x的架構</figcaption></figure><p>在2.x之後，可以看到，MapReduce不直接架在HDFS上面，而是在YARN的上面，其他的軟體例如HIVE也是在YARN上面，這個時候如果兩邊需要溝通，YARN提供這個渠道。    </p><p>在2.x也增加了所謂的High Availability和Federation的模式，避免第一版的single failure的問題。    </p></section><section><h3 id="WizKMOutline_1513952426249442">3.x版本</h3><p>3.x版本最近剛剛正式版release（2017/12/13），因此屬於非常新的版本。    </p><p>這個版本要求JDK版本一定要在8以上，並且YARN和HDFS的部分都有做出了改變，例如本來HDFS預設會儲存3份提供可靠的Storage，這個已經改成了另外一種模式稱為Erasure Coding不止可以維持本來的容錯機制，並且需要的空間更少。    </p><div class="bs-callout bs-callout-info">這個部分了解的不算太多，在接下來的操作也會主要focus在2.x版本，因此有興趣可以去官網看到最新的調整。    </div></section></section><section><h2 id="WizKMOutline_1513952426250703">結語</h2><p>在這篇，用一個overview的方式快速介紹了Hadoop，了解了幾個重要的元素和Hadoop的幾個特色。   </p><p>在下一篇（<a href="http://blog.alantsai.net/2017/12/data-science-series-05-install-and-test-hadoop-part1.html">[05]建立Hadoop環境 -上篇</a>）要進入動手的階段（終於不是只有理論了），將會建立Ubuntu的VM並且把Hadoop架設起來，了解如何快速測試玩玩看Hadoop。   </p></section><section>   <div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:e4e6902a-ee32-4841-b32a-5d6811c7c272" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8cData+Science+%e5%88%b0%e5%ba%95%e6%98%af%e4%bb%80%e9%ba%bc%e5%be%9e%e4%b8%80%e5%80%8b%e5%ae%8c%e5%85%a8%e5%a4%96%e8%a1%8c%e8%a7%92%e5%ba%a6%e4%be%86%e7%9c%8b%e3%80%8d" rel="tag">「Data Science 到底是什麼從一個完全外行角度來看」</a>,<a href="/tags/data+science" rel="tag">data science</a></div></section>