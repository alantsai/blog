Title: "[打造自己的template-建立一致性程式碼][暫完]階段性總結"
Published: 2017-09-15
Modified: 2017-09-15
Image: /posts/migrate/2017-09-15-buildYourOwnTemplate-summary_Asset/image_thumb(36).png
Tags: ["visual studio","「打造自己的template-建立一致性程式碼」"]
RedirectFrom: 2017/09/buildYourOwnTemplate-summary.html
Series: ["「打造自己的template-建立一致性程式碼」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-f7LhRI7Ud3o/WbvvpbcqynI/AAAAAAAAWZY/QiG_KwVWyMc11iJnJhqsqbJU7r93cIzqQCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-15-buildYourOwnTemplate-summary_Asset/image_thumb(36).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></figure></section><section><p>在上一篇（<a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template.html">[12]TemplateBuilder建立Multi Project和Item Template</a>）介紹完最複雜類型的template - multi project template之後，基本上已經涵蓋一般常見到的情況了。</p><p>		在這一篇將會對於這一系列所介紹的方式做個總結，並且展望接下來可以關注的方向。 		</p></section><section><a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085689" ;="">總結目前介紹的內容</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085917" ;="">template重要性和何為template</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085883" ;="">用匯出的方式建立template</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085741" ;="">用VS的project template建立template</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085945" ;="">SideWaffle的降臨</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085561" ;="">關於未來</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085111" ;="">什麼是Wizard</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558085460" ;="">.net core帶來的新template模式</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505487558086954" ;="">結語</a><br></li></ul></div></section> <a name="more"></a> <section><h2 id="WizKMOutline_1505487558085689">總結目前介紹的內容</h2><p>		整合到目前為止所介紹的內容。 		</p><section><h3 id="WizKMOutline_1505487558085917">template重要性和何為template</h3><p>			這一個系列的一開始，先介紹了template的重要性，用template來規範團隊是最好的方式。 			</p><ul><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-intro.html">[01]開篇</a></li><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-template-intro-sample-package-intro.html">[02]了解template類型和建立出要變成範本的程式</a></li></ul></section><section><h3 id="WizKMOutline_1505487558085883">用匯出的方式建立template</h3><p>			最簡單和最快的建立template方式就是透過Visual Studio（以下簡稱VS）匯出的方式來達成。 			</p><ul><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-create-VS-template-using-export.html">[03]透過匯出建立Project Template</a></li></ul><p>			在接下來介紹vstemplate的內容和如何透過微調vstemplate來達到想要的效果 			</p><ul><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-understand-vstemplate-make-vs-refresh-template-cache.html">[04]了解vstemplate來微調匯出的Template和強制VS更新Template的方式</a></li></ul><p>			最後介紹如何建立最複雜類型的template - multi project template和item template。 			</p><ul><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-create-multi-project-template.html">[05]建立多專案(multi project)的Template</a></li><li><a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-create-item-template.html">[06]建立Item Template</a></li><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-create-item-template.html">[07]匯出template建立小總結，更好的建立方式介紹 VSIX</a></li></ul></section><section><h3 id="WizKMOutline_1505487558085741">用VS的project template建立template</h3><p>			由於匯出template不好管理，因此開始深入了解如何透過VS的Project Template和VSIX建立template。 			</p><ul><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting.html">[08]Visual Studio Experimental Instance 和 VSIX template的細節設定介紹</a></li></ul><p>			用VSIX開發會自動開啟VS的Experimental Instance做測試，因此對於如何使用Experimental Instance做了一些介紹 			</p><ul><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-VSIX-problem-SideWaffle-pros-intro.html">[09]內建VSIX的缺點 - SideWaffle基本介紹</a></li></ul></section><section><h3 id="WizKMOutline_1505487558085945">SideWaffle的降臨</h3><p>			Project Template的缺點是，如果要調整template是在不方便，因為template本身都是替換的Parameter，造成無法像一般開發的方式來2度微調template，因此SideWaffle進來了： 			</p><ul><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-use-sidewaffle-to-create-project-template.html">[10]用SideWaffle建立Project Template</a></li></ul><p>			有了一些使用SideWaffle的概念之後，開始介紹實際的背後功臣 - TemplateBuilder - 如何微調並且使用建立multi project template 			</p><ul><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-TemplateBuilder-setting-and-convention.html">[11]深入了解TemplateBuilder的特殊檔案設定方式</a></li><li><a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template.html">[12]TemplateBuilder建立Multi Project和Item Template</a></li></ul></section></section><div class="bs-callout bs-callout-default">				這個系列只有有程式碼的部分都可以再github <a href="https://github.com/alantsai-samples/mhat-visualstudio-template">alantsai-samples/mhat-visualstudio-template</a> 找到範例，有程式碼的篇章都會有一個tag 				以<code>sample/</code>為開頭，例如<code>sample/chapter02</code></div><section><h2 id="WizKMOutline_1505487558085561">關於未來</h2><p>		到目前為止，用TemplateBuilder已經能夠很方便建立出自己的template，基本上一般情境都夠用了，不過是否這就已經是到頭了呢？ 		</p><p>		基本上有兩個部分還沒有介紹： 		</p><ul><li>Wizard的介紹</li><li>.net core的新template模式</li></ul><section><h3 id="WizKMOutline_1505487558085111">什麼是Wizard</h3><p>			在建立template的時候，有時候會希望和使用者互動。舉例來說，如果我的template包含自動設定好db連線，這個時候建立template的時候就會希望有個地方會讓他輸入db相關資訊 -  			template建立好就設定好不需要建立完在自己去找對應檔案和調整。 			</p><p>			要達到這種效果，就需要寫Wizard。 			</p><p>			可以想象成寫asp .net mvc的時候，如果建立controller會讓你選擇要建立的controller類型（controller其實用的是Scaffolding在做這個事情，不過概念是差不多）。 			</p><p>			Wizard目前<em>沒有</em>打算介紹（至少短期內不會），因為使用的情境比較少，雖然有Wizard的確UX會更好，但是如果template沒有複雜到某個程度，其實不會用到。 			</p></section><section><h3 id="WizKMOutline_1505487558085460">.net core帶來的新template模式</h3><p>			作為.net developer，最近應該長聽到的就是.net core 2.0的到來。 			</p><p>			如果對.net core有關注的就會注意到，.net core 很大一個特色就是程式的執行模式和以前的.net framework不一樣，多了一個<code>dotnet</code>的指令。 			</p><p>			裡面可以使用<code>dotnet new</code>的方式來建立出template，這種類型的template和VS裡面的template建立方式有些不同。 			</p><p>			在不遠的將來，將會對於.net core的template建立方式做介紹。 			</p></section></section><section><h2 id="WizKMOutline_1505487558086954">結語</h2><p>		在這篇把這個系列做一個階段性總結。 		</p><p>		更深入的template需求可以朝Wizard的方向做研究和客制，不過因為使用情境比較深入因此暫時不會介紹。 		</p><p>		反而是因為.net core的到來，新的template建立方式勢必會越來越常使用。 		</p><p>		不過如果不了解.net core，會無法了解為何template有做了變化。 		</p><p>		因此這個系列將會暫時結束，轉向對.net core作介紹，並且在那邊介紹如何使用<code>SideWaffle Creator 2017</code>（SideWaffle的VS 2017版本）來建立出VS和dotnet new格式的template。 		</p></section><section><div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:03e7790e-6b07-4798-9509-c8543fbcec39" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84template-%e5%bb%ba%e7%ab%8b%e4%b8%80%e8%87%b4%e6%80%a7%e7%a8%8b%e5%bc%8f%e7%a2%bc%e3%80%8d" rel="tag">「打造自己的template-建立一致性程式碼」</a>,<a href="/tags/Visual+Studio" rel="tag">Visual Studio</a></div></section>