Title: "[打造自己的template-建立一致性程式碼][09]內建VSIX的缺點 - SideWaffle基本介紹"
Published: 2017-09-06
Modified: 2017-09-06
Image: /posts/migrate/2017-09-06-buildYourOwnTemplate-VSIX-problem-SideWaffle-pros-intro_Asset/image_thumb(32).png
Tags: ["visual studio","「打造自己的template-建立一致性程式碼」"]
RedirectFrom: 2017/09/buildYourOwnTemplate-VSIX-problem-SideWaffle-pros-intro.html
Series: ["「打造自己的template-建立一致性程式碼」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-vfb6GwPamPg/WbAVjJ25KkI/AAAAAAAAWTU/d2Da1gtdi3UUTxZAYgFYIXGP6xaCiV7cwCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="[打造自己的template-建立一致性程式碼][09]內建VSIX的缺點 - SideWaffle基本介紹" style="display: inline; background-image: none;" alt="[打造自己的template-建立一致性程式碼][09]內建VSIX的缺點 - SideWaffle基本介紹" src="/posts/migrate/2017-09-06-buildYourOwnTemplate-VSIX-problem-SideWaffle-pros-intro_Asset/image_thumb(32).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></figure></section><section><p>在上篇（<a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting.html">[08]Visual Studio Experimental Instance 和 VSIX template的細節設定介紹</a>）   介紹完了Visual Studio（以下簡稱VS）的Experimental Instance的一些維護方式和VSIX template的一些細節設定。內建VSIX方式建立template基本就告一個段落。   </p><p>不過會發現雖然用VSIX可以版控template專案和部署的時候變得容易，但是建立template的過程有些地方還是過於繁瑣。<em>SideWaffle因此而誕生</em>。   </p><p>這篇將會對現行做法有什麼問題在做一些介紹，和SideWaffle如何讓這些變得更加容易。   </p></section>   <section> <a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348418" ;="">VSIX建立template的問題</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348323" ;="">SideWaffle是什麼？</a><br></li><ul style="margin: 0px 0px 0px 30px;"><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348642" ;="">SideWaffle小檔案</a><br></li></ul></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348844" ;="">SideWaffle 版本問題 - VS 2017怎麼辦？</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348301" ;="">是否一定要安裝SideWaffle？</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348585" ;="">TemplateBuilder如何讓建立template變得容易？</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565348846" ;="">結語</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504711565349249" ;="">參考資料</a><br></li></ul></div></section>    <a name="more"></a>    <section><h2 id="WizKMOutline_1504711565348418">VSIX建立template的問題</h2><p>VSIX建立template的方式比匯出的方式已經在版控和安裝上面一大進步了，但是在建立template的事情上面還是有點不便利。   </p><p>最大的不便利就是template內容本身的修改不方便。   </p><p>由於template裡面有一些Parameter(例如<code>$safeprojectname$</code>) - 所以假設今天template本身要加檔案或者要改內容，需要手動改vstemplate（來把檔案加入），並且由於有哪些Parameter，也沒辦法像一般solution那樣build做測試。   </p><p>這些導致每一次要改template：   </p><ol><li>需要先用template new project建立出來</li><li>做好調整</li><li>在用匯出方式產生出來</li><li>把zip檔案解壓縮出來更新到Project Template專案</li></ol><p>所以修改template非常繁瑣。   </p><p>為了解決這個問題，一個open source專案誕生了：<em><strong>SideWaffle</strong></em></p></section><section><h2 id="WizKMOutline_1504711565348323">SideWaffle是什麼？</h2><p>SideWaffle是一個VS套件可以裝在2012/2013/2015。   </p><p>最當初的目的是提供一些常見專案類型的template和一些Snippet；由於要管理這麼多template也很花時間，因此也包含了一些VS tweak讓建立template更加簡單。   </p><div class="bs-callout bs-callout-default"><h4 id="WizKMOutline_1504711565348642">SideWaffle小檔案</h4><ul><li>官網：<a href="http://sidewaffle.com/">http://sidewaffle.com/</a></li></ul><p>提供以下功能：    </p><ol><li>一些Project Template</li><li>一些Item Template</li><li>一些Snippet</li><li>方便建立Template的VS tweak</li></ol></div></section><section><h2 id="WizKMOutline_1504711565348844">SideWaffle 版本問題 - VS 2017怎麼辦？</h2><p>官方support版本只有到VS 2015，沒有support VS 2017，不過有第三方調整讓VS 2017可以安裝 <a href="https://github.com/ligershark/side-waffle/issues/400">Visual Studio 2017 support</a></p><p>在未來，官方會有一個全新的版本，    目前已經有發佈在Marketplace叫做<a href="https://marketplace.visualstudio.com/items?itemName=Sayed-Ibrahim-Hashimi.SidewaffleCreator2017">SideWaffle Creator 2017</a>需要VS 2017.3版本才能夠正常使用。    </p></section><section><h2 id="WizKMOutline_1504711565348301">是否一定要安裝SideWaffle？</h2><p>如果不需要那些提供的Project Template、Item Template和Snippet，其實可以<em>不用</em>安裝SideWaffle。   </p><p>讓template更容易建立是透過一個nuget套件叫做<code>TemplateBuilder</code>，SideWaffle只是讓建立<code>TemplateBuilder</code>相關檔案<em>更加容易</em>。   </p><p>所以，如果只是為了建立template更加方便，可以<em>不用</em>裝SideWaffle。   </p></section><section><h2 id="WizKMOutline_1504711565348585">TemplateBuilder如何讓建立template變得容易？</h2><p><code>TemplateBuilder</code>是裝在VSIX專案裡面，裝好了之後，會自動做幾個事情：   </p><ol><li>加入MSBuild的target <code>ligershark.templates.targets</code>（<a href="https://github.com/ligershark/template-builder/blob/master/tools/ligershark.templates.targets">原始碼</a>）</li><li>自動加入 <code>Asset</code>到VSIX的<code>vsixmanifest</code>檔案裡面 - 自動加入 Output/ItemTemplates和Output/ProjectTemplates</li></ol><p>MSBuild的target會做很多事情，其中比較重要的有：   </p><dl><dt>     自動把所有對應檔案把特定的值替換成設定的值    </dt><dd>     不需要在cs檔案裡面改成<code>Parameter</code>，用規則自動替換 - 換句話說因為沒有<code>Parameter</code>cs可以build    </dd><dd></dd><dt>     自動依照csproj裡面設定建立出vstemplate裡面的檔案清單    </dt><dd>     不需要自己手動寫vstemplate裡面的那些檔案要包含    </dd><dd></dd><dt>     不用手動寫vstemplate裡面的<code>ProjectItem</code>，會自動依照csproj建立    </dt><dt>     把VSIX專案裡面資料夾<code>ProjectTemplates</code>和<code>ItemTemplates</code>和<code>Snippets</code>自動加入到 vsix    </dt><dd>     用Convention的方式知道那些內容屬於Project Template、Item Template 和 Snippet。    </dd><dd></dd></dl><p>簡而言之，<code>TemplateBuilder</code>能夠讓專案保持在可build的情況下又能夠直接產生template，讓<em>修改template變得和開發一樣方便</em>。   </p></section><section><h2 id="WizKMOutline_1504711565348846">結語</h2><p>在這篇對於VSIX修改template的繁瑣步奏做了說明，並且簡單介紹了SideWaffle所帶來的功能和<code>TemplateBuilder</code>如何讓建立Template變得簡單。   </p><p>在下篇將會對如何用SideWaffle提供的VS tweak讓用TemplateBuilder建立Project Template非常簡單。   </p></section><section><h2 id="WizKMOutline_1504711565349249">參考資料</h2><dl><dt><a href="https://github.com/ligershark/side-waffle/wiki/How-SideWaffle-Works">How SideWaffle Works</a></dt><dd>     介紹<code>TemplateBuilder</code>的作用    </dd><dd></dd><dt><a href="http://sidewaffle.com/">SideWaffle VS 2015 官網</a></dt><dd>     官網介紹VS 2015    </dd><dd></dd><dt><a href="https://marketplace.visualstudio.com/items?itemName=Sayed-Ibrahim-Hashimi.SidewaffleCreator2017">Sidewaffle Creator (2017)</a></dt><dd>     SideWaffle VS 2017 版本，需要VS 2017.3才能夠裝    </dd><dd></dd><dt><a href="https://github.com/ligershark/side-waffle/issues/401">SideWaffle Creator 的願景</a></dt><dd>     SideWaffle VS 2017 和 .net core 如何整合搭配    </dd><dd></dd></dl></section> <section> <div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:554d4d4b-b3a2-455b-8d84-84e1c9aeac75" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84template-%e5%bb%ba%e7%ab%8b%e4%b8%80%e8%87%b4%e6%80%a7%e7%a8%8b%e5%bc%8f%e7%a2%bc%e3%80%8d" rel="tag">「打造自己的template-建立一致性程式碼」</a>,<a href="/tags/Visual+Studio" rel="tag">Visual Studio</a></div></section>