Title: "[iThome第8屆鐵人賽 07]建制結果問題 - 說明 和 處理方法 1"
Published: 2016-12-17
Modified: 2017-12-12
Image: /posts/migrate/2016-12-17-devopsSeries-buildOutputProblem-1_Asset/image_thumb(5).png
Tags: [".net","「ithome 第八屆鐵人賽」","devops","「從.net工程師的角度來看devops」","psake","powershell"]
RedirectFrom: 2016/12/devopsSeries-buildOutputProblem-1.html
Series: ["「iThome 第八屆鐵人賽」","「從.Net工程師的角度來看DevOps」"]
---
<div id="divKMOutline" style="border-top-style: groove; border-bottom-style: groove; border-right-style: none; margin: 10px 0px; border-left-style: none"><ul style="margin: 0px 0px 0px 20px"><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382457" ;="">Build結果有什麼</a><br></li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382878" ;="">加入Library和Console專案</a><br></li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382503" ;="">解決方法 1 - .Net 4.5 以上的專案 - GenerateProjectSpecificOutputFolder</a><br><ul style="margin: 0px 0px 0px 30px"><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382357" ;="">解決方法1的缺點</a></li></ul></li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382169" ;="">解決方案 2 - 使用Asp.Net Mvc的概念產生出 _PublishedXXX</a><br></li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1481962636382397" ;="">結語</a></li><br><br></ul></div><section> <p>上篇我們提到了用psake來建制一個asp .net mvc的專案，並且修正了psake執行時候呈現的內容，在這篇，我們將進一步延伸來看一下，buid結束產生的內容是什麼和 加入另外兩種常見的.Net專案： </p><ol><li>Console Project<br></li><li>Library Project</li><br><br></ol><div class="bs-callout bs-callout-default">sample 程式在 github <a href="https://github.com/alantsai-samples/devops-psake/releases/tag/sample%2Fchapter7">devops-psake sample/chapter7</a></div></section> <a name="more"></a> <section> <h2 id="WizKMOutline_1481962636382457">Build結果有什麼</h2><p>執行完build之後，我們會看到，在<code>.build\temp</code>下面有一堆檔案。 </p><figure><a href="https://lh3.googleusercontent.com/-ph2_21ylSck/WFT27o1hq7I/AAAAAAAAU_0/l54ezAVSv4U/s1600-h/image%25255B2%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2016-12-17-devopsSeries-buildOutputProblem-1_Asset/image_thumb(5).png" width="644" height="478" class="img-responsive"></a> <figcaption>一堆怪怪的檔案</figcaption></figure> <p>如果只熟悉用Visual Studio來建制的話，會覺得奇怪，怎麼有這麼多奇奇怪怪的檔案跑出來，並且網站那些css，javascript怎麼都不見了？ </p><p>在往下看，會看到有一個<code>.\build\temp\_PublishedWebsites\WebApplication1</code>，這個看起來就和我們所了解的網站專案比較有關係。 </p><figure><a href="https://lh3.googleusercontent.com/-_3ERKHzabCo/WFT29YFqaPI/AAAAAAAAU_8/LTitZxCVeAs/s1600-h/image%25255B5%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2016-12-17-devopsSeries-buildOutputProblem-1_Asset/image_thumb[1](5).png" width="644" height="336" class="img-responsive"></a> <figcaption>_publishedWebsites\WebApplication1</figcaption></figure>  <p>目前來說，我們可以得出一個結論，也就是建制出來的東西雖然結果是在我們指定的資料夾裡面，但是所有東西都在<em>同一個層級</em>。 </p></section><section> <h2 id="WizKMOutline_1481962636382878">加入Library和Console專案</h2><p>假設我們在加入兩個常見的專案類型，Library和Console。 </p><figure><a href="https://lh3.googleusercontent.com/-cydDYgUZGSg/WFT3AEN7cGI/AAAAAAAAVAE/2LNqxhSXvtE/s1600-h/image%25255B8%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2016-12-17-devopsSeries-buildOutputProblem-1_Asset/image_thumb[2](4).png" width="382" height="284" class="img-responsive"></a> <figcaption>多了兩個project</figcaption></figure>  <p>這個時候我們在build一次，在看看我們的結果，這個時候會發現，所有東西都堆在了一起。 </p><p>如果結果都堆在一起，我們要怎麼<em>區分</em>什麼是什麼？因為最後我們要發佈或者把建制結果打包，如果區分不了如何能夠做這個事情？ </p></section><section> <h2 id="WizKMOutline_1481962636382503">解決方法 1 - .Net 4.5 以上的專案 - GenerateProjectSpecificOutputFolder</h2><p>在MSbuild有個參數叫做<code>GenerateProjectSpecificOutputFolder</code>，這個參數可以讓建制的時候，結果還是依照solution專案來放。 </p><p>所以我們可以再：<code>default.ps1</code>，調整建制MSBuild的參數： </p><pre class="brush: powershell;highlight:[10]"><code class="language-powershell line-numbers">task Compile -depends Clean, Init -description "編譯程式碼" `
    -requiredVariables solutionFile, buildConfiguration, buildTarget, buildTempDirectory `
{ 
 Write-Host "開始建制檔案：$solutionFile"

 $buildParam = "Configuration=$buildConfiguration" +
     ";Platform=$buildTarget" + 
     ";OutDir=$buildTempDirectory"
 
 $buildParam = $buildParam + ";GenerateProjectSpecificOutputFolder=true"

 msbuild $solutionFile "/p:$buildParam"
}
  </code></pre><p>這個時候在看看發佈出來的結果，可以很清楚看到資料夾有做了區分。 </p><figure><a href="https://lh3.googleusercontent.com/-8sWUyHQM3B4/WFT3BuYpn3I/AAAAAAAAVAM/-R7Ckvl8Hu0/s1600-h/image%25255B11%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2016-12-17-devopsSeries-buildOutputProblem-1_Asset/image_thumb[3](4).png" width="366" height="238" class="img-responsive"></a> <figcaption>建制結果有區分專案</figcaption></figure>  <div class="bs-callout bs-callout-info"><h3 id="WizKMOutline_1481962636382357">解決方法1的缺點</h3><p>雖然說解決方法1很簡單就能夠實現，但是他有個小缺陷 - .Net 4.5 以上的專案才能夠支援 - 雖然比較少寫4.5以下的專案，但是至少有這個缺陷。 </p><p>加上這個系列也想介紹一些MSBuild的基本概念，因此我們想象另外一個思路。 </p></div></section><section> <h2 id="WizKMOutline_1481962636382169">解決方案 2 - 使用Asp.Net Mvc的概念產生出 _PublishedXXX</h2><p>另外一個思路是，既然Asp.Net Mvc會把它包好，是否可以用同樣概念去對Library還有Console程式的結果包在特定的資料夾下面？ </p><p>要了解這個，就需要了解到為什麼只有Asp .Net Mvc的專案才會產生帶有 _PbulishedWebsite的資料夾，而這個答案就在MSBuild建制Asp .Net Mvc的方式不同有關。也就是下篇介紹的內容。 </p></section><section> <h2 id="WizKMOutline_1481962636382397">結語</h2><p>在這篇了解到其實建制出來的結果都是混在一起的，沒有辦法區分那個專案的結果在那邊。而這個問題將會影響到我們之後不管執行測試也好，還是要打包結果，都會造成不便利。 </p><p>這個問題的一種解決方式是透過MSBUild的一個參數 - 但是這個只能夠用在.net 4.5以上的專案。 </p><p>所以在下篇，我們會了解，到底asp .net mvc專案是如何做到產生在不同資料夾，並且我們如何使用這個概念 </p></section>