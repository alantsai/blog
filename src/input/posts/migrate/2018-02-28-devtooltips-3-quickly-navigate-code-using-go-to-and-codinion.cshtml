Title: "[開發工具小技巧]在Visual Studio 快速找到對應的程式碼，多多使用「移至」(Go To)及套件Codinion"
Published: 2018-02-28
Modified: 2018-02-28
Image: /posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb(82).png
Tags: ["「開發工具小技巧」","visual studio"]
RedirectFrom: 2018/02/devtooltips-3-quickly-navigate-code-using-go-to-and-codinion.html
Series: ["「開發工具小技巧」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-Fe8-SfAxRm0/WpaHPOlD0dI/AAAAAAAAXvo/APKK8O4-ItcfcAQdUrIEgdrzgEZMho1zACHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb(82).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/confused-muddled-illogical-880735/ 和 https://blog.xebialabs.com/2016/03/21/essential-devops-terms/</figcaption></figure></section><section><p>在開發的時候，能夠用Visual Studio (以下簡稱VS) 快速定義到要改或者想找到的程式碼片段很重要。</p><p>        假設本來要花10秒才能夠打開要的片段，透過使用VS和套件的功能能夠在3秒內就打開，只要發生10次就能夠節省1分鐘的時間。無形之中就可以省掉很多零碎的時間。     </p><p>        這篇將會介紹如何用VS內建的<em>移至 (Go to)</em>找到某個程式碼片段，用<em>codinion</em>套件快速找到目前打開的檔案member。     </p></section> <section> <a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498159574" ;="">移至 (Go to) 功能介紹</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498159946" ;="">如何啟動 移至 的功能</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498160990" ;="">幾種 移至 的方式</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498160739" ;="">把 移至 的篩選限定在當前打開的檔案</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498160787" ;="">使用Codinion套件做移動</a><br></li><ul style="margin: 0px 0px 0px 30px;"><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1519813498160585" ;="">套件：codinion小檔案</a><br></li></ul></ul></ul></div></section>     <a name="more"></a><section><h2 id="WizKMOutline_1519813498159574">移至 (Go to) 功能介紹</h2><p>        一般來說，開啟solution之後，接下來就是要打開要修改的code檔案。例如調整某個class內容。     </p><p>        如果不用任何方式的話，那麼就是用<em>Solution Explorer</em>瀏覽到code的檔案位置然後打開。換句話說需要<em>記得</em>資料夾結構。     </p><p>        如果這個Solution並不是自己從頭到尾開發或者說專案很大的話，那麼這樣開就很花時間。     </p><p>        換個角度來看，既然已經知道了要改的class名稱，那麼是否能夠用那個class名稱<em>搜索移動</em>到那個class所在的位置？     </p><p>        這就是<em>移至 (Go to)</em>的功能。     </p><section><h3 id="WizKMOutline_1519813498159946">如何啟動 移至 的功能</h3><p>            可以使用：             </p><ol><li>快捷鍵：預設是 <code>Ctrl + ,</code></li><li>                     Menu：<code>Edit -&gt; Go To</code><figure><a href="https://lh3.googleusercontent.com/-64qrl1p0yWc/WpaHRaNvMfI/AAAAAAAAXvw/CDIyIJFxkGYtreSscz2e4LdajBN-92-kwCHMYCw/s1600-h/image%255B5%255D"><img width="654" height="225" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb[1](69).png" border="0" class="img-responsive"></a><br><figcaption>用Edit Toolbar開啟設定</figcaption></figure></li></ol><div class="bs-callout bs-callout-info"><p>            由於預設的快速鍵和注音輸入發的逗點快速鍵是一樣，因此很有可能按下之後還是不會出現。             </p><p>                因此建議調整快速鍵，以我自己為例是改成<code>Alt+,</code></p><figure><a href="https://lh3.googleusercontent.com/-DzCr46XKerA/WpaHTQeVjAI/AAAAAAAAXv4/7GsCES47tG4kXCfBBco7w6s9M4ZicdswACHMYCw/s1600-h/image%255B8%255D"><img width="654" height="442" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb[2](57).png" border="0" class="img-responsive"></a><br><figcaption>修改預設快捷鍵</figcaption></figure></div></section><section><h3 id="WizKMOutline_1519813498160990">幾種 移至 的方式</h3><p>            當把 移至 呼叫起來了之後，看到的畫面是：             </p><figure><a href="https://lh3.googleusercontent.com/-Qjg8WVArAnA/WpaHVG3WFPI/AAAAAAAAXwA/vfb5Rhmij30VBM8pPs-VR8TMzPuyH2R8QCHMYCw/s1600-h/image%255B11%255D"><img width="654" height="198" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb[3](53).png" border="0" class="img-responsive"></a><br><figcaption>啟動 的畫面</figcaption></figure><ol><li><em>Go To Line (Ctrl+G) 字符：<code>:</code></em> - 點下這個選項之後，可以輸入要跳過去的<em>行數</em></li><li><em>Go To File (Ctrl+1, Ctrl+F) 字符: <code>f</code></em> - 這個選項是搜索<em>檔名</em></li><li><em>Go To Types (Ctrl+1, Ctrl+T) 字符: <code>t</code></em> - 這個選項是搜索<em>class、Struct、Enums、Interface和Delegate</em></li><li><em>Go To Member (Ctrl+1, Ctrl+M) 字符: <code>m</code></em> - 這個選項是搜索<em>variable、property、method、constant、enum item和event</em></li><li><em>Go To Symbol (Ctrl+1, Ctrl+S) 字符: <code>#</code></em> - 這個選項是搜索 <em> Types + Member</em></li></ol><div class="bs-callout bs-callout-info">            這幾個選項如果點下去，會發現其實就是在前面加上一個特殊字符。例如，Go To Line就是 加上<code>:</code>。             所以完全可以只記得一個快速鍵，就是如何把Go To呼叫起來，然後在打特殊字符做篩選。         </div><div class="bs-callout bs-callout-danger">            如果沒有記錯，Go To是VS 2017才有的功能，VS 2015則是只有Navigate To。兩者最大的差異是在Navigate To沒有這些篩選項目。         </div></section><section><h3 id="WizKMOutline_1519813498160739">把 移至 的篩選限定在當前打開的檔案</h3><p>            在剛剛那5個不同篩選項目之後都是和設定有關的內容。         </p><p>            這邊只提Symbol選項旁邊的那個，是<em>Current Document (Ctrl+Alit+c)</em>。這個選項的意思是，如果開啟的話，把搜索條件限制在<em>當前檔案</em>。         </p><p>            這個最長和Go To Member做搭配。一般來說想要快速跳到當前檔案的某個property或者method，就會限定在目前這個檔案。         </p><p>            不過這個方式有個缺點，因為很多時候是打搜索的文字到一半，才想起來要限制在當前檔案，這個時候如果加上這個選項，剛剛打到一半的內容<em>會清空</em>。             由於共用一個Go To搜索框，所以當要搜索全域的時候，很有可能已經把要打的字打了一半，才發現忘記不要開這個設定，造成要重新打。         </p><p>            這也是為什麼用到Codinion。因為廣域和當前檔案可以分開兩個不同快捷鍵觸發（內建的Go To沒有找到這個快捷鍵）         </p></section></section><section><h2 id="WizKMOutline_1519813498160787">使用Codinion套件做移動</h2><div class="bs-callout bs-callout-info">        題外話，在另外一篇有提到Codinion的另外一個功能，為不同類型欄位給出不同的顏色：<a style="line-height: 1.6; font-size: 15px;" href="wiz://open_document?guid=43dcab07-ddf6-42e4-9ddd-91c49d4f94e2&amp;kbguid=&amp;private_kbguid=b1ed89f6-16c8-11e1-8d03-00237def97cc">[開發工具小技巧]調整Visual Studio的字形及文字顏色</a></div><div class="bs-callout bs-callout-default"><h4 id="WizKMOutline_1519813498160585">套件：codinion小檔案</h4><ul><li>套件：<a href="https://marketplace.visualstudio.com/items?itemName=MartinTopfstedt.Codinion">https://marketplace.visualstudio.com/items?itemName=MartinTopfstedt.Codinion</a></li><li>直接下載：<a href="https://marketplace.visualstudio.com/items?itemName=MartinTopfstedt.Codinion">鏈接</a></li><li>官網：<a href="https://www.codinion.com/">https://www.codinion.com/</a></li><li>支援的VS版本：2012、2015、2017</li></ul></div><p>        當初會裝Codinion的套件的原因就是因為在VS 2015無法區分，File、Member及Symbol，所以才找到了這個套件。     </p><p>        基本上VS內建的Go To可以取代大部分Codinion的搜索功能，不過當要在<em>當前檔案</em>找到某個member的時候，個人還是覺得Codinion比較好用。     </p><p>        以Codinion找到目前檔案的某個member為例，快速鍵是<code>Alt+M</code>(不確定這個是我自己改的還是內建的快速鍵)，會直接下拉出目前所有member         以及可以打來過濾：     </p><figure><a href="https://lh3.googleusercontent.com/-QJDdx-cNnbM/WpaHZ4YFQZI/AAAAAAAAXwI/9xjVGrKFNIEw3N5-mttbZwmZACwkoPyOQCHMYCw/s1600-h/image%255B14%255D"><img width="654" height="118" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2018-02-28-devtooltips-3-quickly-navigate-code-using-go-to-and-codinion_Asset/image_thumb[4](55).png" border="0" class="img-responsive"></a><br><figcaption>範例畫面</figcaption></figure><p>        這個對我來說有兩個好處：         </p><ol><li><em>有時候我想要看到所有的項目</em>：因為忘記關鍵字是什麼，可以用鍵盤下來快速找</li><li><em>搭配設定的顏色</em>: 這樣可以直覺的找到什麼是什麼。例如我的method是深紅色，那麼看到就可以直覺關聯起來</li></ol><div class="bs-callout bs-callout-danger">        不過Codinion有時候啟動會比較慢，可能是因為先把清單load出來造成。因此有好有壞。     </div></section>      <section>         <h2>結語</h2><p>            能夠快速找到想要了解或者修改的程式碼是一個非常重要的技能，因為太常用到了，因此只要能夠提升速度就可以減少很多浪費的時間。         </p><p>            希望透過這篇能夠讓大家知道VS在這方面所提供的功能，也歡迎如果有不同的建議能夠和我做分享。         </p></section>     <section>         <h2>參考資料</h2><dl><dt><a href="https://blogs.msdn.microsoft.com/vcblog/2016/11/16/introducing-go-to-the-successor-to-navigate-to/">Introducing Go To, the successor to Navigate To</a></dt><dd>                 介紹Go To的功能             </dd><dt>                 <a href="https://www.codinion.com/">Codinion官網</a>             </dt><dd>                 官網介紹Codinion的功能             </dd>         </dl></section>     <section>         <div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:65b270d2-73b3-406f-b181-84d14d4f0890" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e9%96%8b%e7%99%bc%e5%b7%a5%e5%85%b7%e5%b0%8f%e6%8a%80%e5%b7%a7%e3%80%8d" rel="tag">「開發工具小技巧」</a>,<a href="/tags/Visual+Studio" rel="tag">Visual Studio</a></div></section>