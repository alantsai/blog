Title: "[打造自己的template-建立一致性程式碼][12]TemplateBuilder建立Multi Project和Item Template"
Published: 2017-09-14
Modified: 2017-09-14
Image: /posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb(35).png
Tags: ["visual studio","「打造自己的template-建立一致性程式碼」"]
RedirectFrom: 2017/09/buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template.html
Series: ["「打造自己的template-建立一致性程式碼」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-cgN1fvGUZH8/WblVmdfAMZI/AAAAAAAAWXU/WrsfTnq6chsvMdvaEnJp4kmGApCMNyiAwCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb(35).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></figure></section><section><p>  在上一篇（<a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-TemplateBuilder-setting-and-convention.html">[11]深入了解TemplateBuilder的特殊檔案設定方式</a>）對於TemplateBuilder的一些特殊檔案的設定做了更詳細的介紹，對於一般微調已經夠用了。   </p><p>  不過如果要建立Multi Project還未遇到一些問題，因此這篇將會對如何用TemplateBuilder來建立Multi Project的template和快速介紹建立Item Template。   </p></section><section><div class="bs-callout bs-callout-default">匯出用的範例程式碼 <a href="https://github.com/alantsai-samples/mhat-visualstudio-template/releases/tag/sample%2Fchapter12">github mhat-visualstudio-template sample/chapter12</a></div></section><a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819762289" ;="">用TemplateBuilder建立Multi Project Template</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763908" ;="">把要建立的Multi Project複製一份到ProjectTemplates\MultiTemplate下面</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763163" ;="">在根專案建立_Definitions和如果需要_preprocess</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763134" ;="">在各自專案建立vstemplate和如果需要_preprocess</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763625" ;="">把這些特殊檔案加入專案reference</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763237" ;="">測試</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763118" ;="">調整</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763362" ;="">用TemplateBuilder建立ItemTemplate</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763907" ;="">結語</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1505317819763256" ;="">參考資料</a><br></li></ul></div><a name="more"></a><section><h2 id="WizKMOutline_1505317819762289">用TemplateBuilder建立Multi Project Template</h2><p>  基本上建立Multi Project Template和一般template做法差不多，唯一的差別點是為了讓<code>_preprocess</code>有作用，需要設定一些<code>Wizard</code>。   </p><p>  整個建立過程如下：   </p><ol><li>把要建立的Multi Project複製一份到<code>ProjectTemplates\MultiTemplate</code>下面</li><li>在根專案建立<code>_Definition</code>和如果需要<code>_preprocess</code></li><li>在各自專案建立<code>vstemplate</code>和如果需要<code>_preprocess</code></li><li>把這些特殊檔案加入專案reference</li><li>測試</li><li>調整</li></ol><section><h3 id="WizKMOutline_1505317819763908">把要建立的Multi Project複製一份到ProjectTemplates\MultiTemplate下面</h3><p>   先用之前建立的multi project template來建立一個專案。    </p><figure><a href="https://lh3.googleusercontent.com/-e8TA-L0_4aI/WblV2kQvuOI/AAAAAAAAWXc/SToFySXqWeY6Em55Rsk8fbvdM0zhRsTKgCHMYCw/s1600-h/image%255B5%255D"><img width="654" height="375" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[1](31).png" border="0" class="img-responsive"></a><br><figcaption>先建立一個專案</figcaption></figure><p>   把那個專案複製到VSIX專案的ProjectTemplates\MultiTemplate下面：    </p><figure><a href="https://lh3.googleusercontent.com/-p5PalKmp2Rg/WblV4cbTnHI/AAAAAAAAWXk/LDS2xC9tHpcoMzhfoHfeXH-k21rcI8H3wCHMYCw/s1600-h/image%255B8%255D"><img width="654" height="203" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[2](25).png" border="0" class="img-responsive"></a><br><figcaption>複製過去</figcaption></figure><p>   調整一下，讓sln同一層就是另外兩個專案的資料夾    </p><figure><a href="https://lh3.googleusercontent.com/-RhQMKjibJQw/WblV6redsVI/AAAAAAAAWXs/EYBDEYjuC7UQsIVH_glaeWodtzthwfjNACHMYCw/s1600-h/image%255B11%255D"><img width="408" height="147" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[3](22).png" border="0" class="img-responsive"></a><br><figcaption>調整階層</figcaption></figure></section><section><h3 id="WizKMOutline_1505317819763163">在根專案建立_Definitions和如果需要_preprocess</h3><p>   首先是<code>_Definitions</code>的部分，由於這個template不需要像單個ProjectTemplate那樣要包含的內容要從csproj出來，反而是像一般的vstemplate的方式，因此我們直接建立一個<code>CSharp.vstemplate</code>。    </p><p>   這邊和我們一般<code>vstemplate</code>一樣，只是要加一個<code>WizardExtension</code>：    </p><pre class="brush: xml;"><code class="language-markup line-numbers">&lt;WizardExtension&gt;
    &lt;Assembly&gt;TemplateBuilder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&lt;/Assembly&gt;
    &lt;FullClassName&gt;TemplateBuilder.RootWizard&lt;/FullClassName&gt;
&lt;/WizardExtension&gt;</code></pre><p>   這個Wizard主要讓<code>_preprocess</code>執行的時候替換參數不會有問題。    </p><figure><a href="https://lh3.googleusercontent.com/-yhxsriWXkYY/WblV9MzKx7I/AAAAAAAAWX0/ePgl7seQT3kBOw9PEXPLFYAUt6k7xzf-wCHMYCw/s1600-h/image%255B17%255D"><img width="654" height="410" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[5](15).png" border="0" class="img-responsive"></a><br><figcaption>最後結果</figcaption></figure><p>   最後，加入一個<code>_preprocess</code>，主要用來設定<code>分類</code>和要替換的namespace部分。    </p><figure><a href="https://lh3.googleusercontent.com/-o1E9tO9xxiU/WblWBA1AnmI/AAAAAAAAWX8/Orxl_aCD2iAu3jt1HGatkLt3PeDFcl1DACHMYCw/s1600-h/image%255B20%255D"><img width="428" height="210" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[6](12).png" border="0" class="img-responsive"></a><br><figcaption>目前Visual Studio Solution看到的樣子</figcaption></figure></section><section><h3 id="WizKMOutline_1505317819763134">在各自專案建立vstemplate和如果需要_preprocess</h3><p>   目前有兩個專案，分別在這兩個專案資料夾加入一個一般的<code>vstemplate</code>和<code>_preprocess</code>。    </p><p>   在<code>vstemplate</code>的部分和一般的沒什麼兩樣，不過要加一個<code>WizardExtension</code> - 注意和root對應所以是<code>ChildWizard</code>，整個內容如下：    </p><pre class="brush: xml;"><code class="language-markup line-numbers">&lt;WizardExtension&gt;
    &lt;Assembly&gt;TemplateBuilder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&lt;/Assembly&gt;
    &lt;FullClassName&gt;TemplateBuilder.ChildWizard&lt;/FullClassName&gt;
&lt;/WizardExtension&gt;</code></pre><p>   其中一個的<code>_preprocess</code>和<code>vstemplate</code>如下：    </p><figure><a href="https://lh3.googleusercontent.com/-RsVg9yCGKM8/WblWF2vhTMI/AAAAAAAAWYE/dXvwOPxFqEQkOUBk_xyQGrRQvCsYAhqtQCHMYCw/s1600-h/image%255B23%255D"><img width="654" height="204" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[7](8).png" border="0" class="img-responsive"></a>、<a href="https://lh3.googleusercontent.com/-GDqdP07vTb4/WblWNF9dmUI/AAAAAAAAWYM/N2ctqAUA3MkEdrwEIG7JqaqgeEXsYADIgCHMYCw/s1600-h/image%255B26%255D"><img width="654" height="347" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[8](9).png" border="0" class="img-responsive"></a><br><figcaption>preprocess和template內容</figcaption></figure></section><section><h3 id="WizKMOutline_1505317819763625">把這些特殊檔案加入專案reference</h3><p>   剛剛建立的那些檔案都要加入到sln裡面，最後的結果如下：    </p><figure><a href="https://lh3.googleusercontent.com/-51m519mnSwU/WblWQbIpIvI/AAAAAAAAWYU/DQZ4c_jPJYksQn8jwXXoyoLC6ciUohdDQCHMYCw/s1600-h/image%255B29%255D"><img width="441" height="242" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[9](3).png" border="0" class="img-responsive"></a><br><figcaption>目前sln樣子</figcaption></figure><p>   這個時候要回去調整一下root的<code>_Definitions\CSharp.vstemplate</code>把ProjectTemplate的link指向剛剛在上一步建立的vstemplate路徑。    </p></section><section><h3 id="WizKMOutline_1505317819763237">測試</h3><p><kbd>Ctrl + F5</kbd>把Visual Studio Experimental Instance執行起來，在<code>C#</code> -&gt; <code>Multi Project</code>會看到template    </p><figure><a href="https://lh3.googleusercontent.com/-fm8fqPwVq6A/WblWUkPRrNI/AAAAAAAAWYc/L2VBpMRChGc9BzrFaxH6ZIRE3sk5tReIgCHMYCw/s1600-h/image%255B32%255D"><img width="654" height="372" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[10](3).png" border="0" class="img-responsive"></a><br><figcaption>建立截圖</figcaption></figure><p>   建立出來的結果    </p><figure><a href="https://lh3.googleusercontent.com/-UYY2N2Nxezg/WblWcgwgbMI/AAAAAAAAWYk/yNmqfrYiSKQoQSKuvHus4MsVG8SLDyF5QCHMYCw/s1600-h/image%255B35%255D"><img width="350" height="385" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[11](4).png" border="0" class="img-responsive"></a><br><figcaption>建立結果</figcaption></figure></section><section><h3 id="WizKMOutline_1505317819763118">調整</h3><p>   很有可能會希望在調整template，這個時候可以怎麼做呢？    </p><p>   還記得我們複製過來的時候有包含<code>sln</code>，其實只需要把那個<code>sln</code><em>執行起來，並且向一般開發一樣修改專案</em>，之後確定好了，只要回到VSIX專案Ctrl + F5 直接在Experimental Instance測試。    </p><div class="bs-callout bs-callout-warning">    github的sample程式碼雖然可以建立出template，但是其實還需要一些tweak才能夠正常build，這個就留個有興趣的來玩玩看。    </div></section></section><section><h2 id="WizKMOutline_1505317819763362">用TemplateBuilder建立ItemTemplate</h2><p>  由於ItemTemplate只是一個檔案居多（其實可以多檔案），因此不會像Project Template那樣幫助那麼大，不過還是有些Convention可以讓建立的時候更加方便。   </p><p>  基本上和project template一樣，建立<code>_Definitions\*.vstemplate</code>和<code>_preprocess</code>，不過因為沒有csproj，因此和一般定義vstemplate定義方式一樣。   </p><div class="bs-callout bs-callout-info">   由於和一般內建的建立方式差不多，所以不詳細介紹，可以參考範例程式碼。如果建立一個cs檔案，最後sln結構如下：    <a href="https://lh3.googleusercontent.com/-KEEBqec_li8/WblWfyDxO6I/AAAAAAAAWYs/OGhCo9HlIvo6NL85W4t7yK24bFoPJ5NNgCHMYCw/s1600-h/image%255B38%255D"><img width="338" height="211" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[12](5).png" border="0" class="img-responsive"></a><figure><a href="https://lh3.googleusercontent.com/-D1aOHn_C9s8/WblWiXbEZgI/AAAAAAAAWY0/BKmbk901RJgvnDzTYd3QjPM7_d7dw2DTACHMYCw/s1600-h/image%255B41%255D"><img width="654" height="375" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-09-14-buildYourOwnTemplate-TemplateBuilder-multi-project-template-and-item-template_Asset/image_thumb[13](5).png" border="0" class="img-responsive"></a><br><figcaption>item template結構和建立item template看到的畫面</figcaption></figure></div></section><section><h2 id="WizKMOutline_1505317819763907">結語</h2><p>  在這篇介紹了如何建立Multi Project Template - 基本上已經是最複雜類型的Project Template了。   </p><p>  因此，SideWaffle的介紹也差不多到了一個尾聲。透過目前所學，對於一般要建立自己的template已經沒什麼問題了。   </p><p>  在下一篇，將會對於最近這些篇章的內容做一個階段性的總結，和這個系列接下來會介紹的方向。   </p></section><section><h2 id="WizKMOutline_1505317819763256">參考資料</h2><dl><dt><a href="https://github.com/ligershark/side-waffle/wiki/How-to-create-a-multi-project-template">How to create a multi project template</a></dt><dd>      官方介紹如何建立Multi Project     </dd><dd></dd></dl></section> <section> <div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:fe54f48a-9afa-41af-9fa8-66b232285fc3" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84template-%e5%bb%ba%e7%ab%8b%e4%b8%80%e8%87%b4%e6%80%a7%e7%a8%8b%e5%bc%8f%e7%a2%bc%e3%80%8d" rel="tag">「打造自己的template-建立一致性程式碼」</a>,<a href="/tags/Visual+Studio" rel="tag">Visual Studio</a></div></section>