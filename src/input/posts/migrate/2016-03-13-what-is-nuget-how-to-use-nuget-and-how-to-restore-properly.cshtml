Title: "何為nuget，該如何使用，和2.7版本之後建議的回覆nuget package(套件)的方式"
Published: 2016-03-13
Modified: 2016-03-13
Image: /posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb(1).png
Tags: ["nuget"]
RedirectFrom: 2016/03/what-is-nuget-how-to-use-nuget-and-how-to-restore-properly.html
Series: []
---
<a id="KMContentPageTopID" name="KMContentPageTopID"></a> <div id="divKMOutline" style="border-top-style: groove; border-bottom-style: groove; border-right-style: none; margin: 10px 0px; border-left-style: none"> <ul style="margin: 0px 0px 0px 30px"> <li><a href="#WizKMOutline_1457800186754673" ;="">何為nuget</a>  </li><li><a href="#WizKMOutline_1457800186765833" ;="">nuget都有存在什麽資源</a>  <ul style="margin: 0px 0px 0px 30px"> <li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186765739" ;="">也有一些變形的使用</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186765251" ;="">Nuget詞不同含義</a></li></ul> </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186765961" ;="">爲什麽要有nuget</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186765189" ;="">nuget一些特性</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186765174" ;="">如何使用nuget</a><br> <ul style="margin: 0px 0px 0px 30px"> <li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766844" ;="">1. 使用GUI</a><br> <ul style="margin: 0px 0px 0px 30px"> <li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766199" ;="">1.1 安裝package</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766506" ;="">1.2 刪除package</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766429" ;="">1.3 更新package</a></li></ul> </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766808" ;="">2. Package Manager Console</a><br> <ul style="margin: 0px 0px 0px 30px"> <li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766607" ;="">2.1 安裝package</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766733" ;="">2.2 刪除package</a></li></ul></li></ul> </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766724" ;="">如何回覆package</a><br> <ul style="margin: 0px 0px 0px 30px"> <li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766767" ;="">做法1.：對專案設定package restore</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766473" ;="">做法2.建議：nuget 2.7之後的做法 - 什麼都不用做</a></li></ul> </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766218" ;="">什麽檔案應該進入版控</a>  </li><li><a style="font-size: 14pt; line-height: 1.5" href="#WizKMOutline_1457800186766720" ;="">結語</a></li></ul></div> <p>第一次接觸.Net開發的人常常會聽到一個名詞，那就是<strong><em>nuget</em></strong>。而習慣nuget的開發者通常也會常說，“你就用nuget去裝xxx套件就好了”。 </p> <p>可是，常常會忽略掉非.Net開發者其實聽不太懂這個術語。在這篇，我希望能夠可以給新進的.net開發者，能夠瞭解什麽是nuget，爲什麽要用nuget，nuget產生的什麽東西應該進入版控，和最重要的<strong><em>建議回覆nuget package的方式</em></strong>(網路上面很多教學都是舊版本的做法) </p><a name="more"></a><section> <h2 id="WizKMOutline_1457800186754673">何為nuget</h2> <p>nuget其實就是一個中央的資源版本儲存庫，每一個資源稱之為<code>package(套件)</code>。每一個package都有不同版本。 </p> <p>這邊我用資源兩個字，因為雖然大部份大家都是用它來管控專案用到的library，但是其實nuget也可以放一些程式， 例如7zip。 </p> <p>如果和別的程式語言比較，nuget就如同Java的Maven，nodeJS的npm，Ruby的Gems。 </p> <p>如果用安裝軟體的角度，nuget就類似Linux世界的Package Management。 </p> <p>nuget其實是一個open source的project(<a href="https://github.com/NuGet">Github</a>)。其中主要兩個部份，client端和server端。 </p></section><section> <h2 id="WizKMOutline_1457800186765833">nuget都有存在什麽資源</h2> <p>大家第一個印象都是nuget就是一些C# library，但是其實nuget放什麽都可以。library是最常見的，但是也有一些package其實就是一個可執行的程式。例如7zip，或一些unit test的console程式，這些類型的package可以方便在做一些自動化(Automation例如Continus Integration和Continus Delivery)的時候，環境設定變得更加簡單。 </p> <p>nuget也有一些特殊的library，像是各個的unit test framework的Test Adapter也可以用nuget安裝。以前，要在Visual Studio直接執行第三放的unit test framework(例如NUnit)，開發者都需要傳Visual Studio的Extension才可以做到，現在因為Visual Studio的調整，只要透過nuget裝Test Adapter就可以，新的開發環境不需要記得Visual Studio要裝個Extension就可以跑測試。 </p> <div class="bs-callout bs-callout-info"> <h4 id="WizKMOutline_1457800186765739">也有一些變形的使用</h4>像是 <a href="https://chocolatey.org/">Chocolatey</a> (微軟版本的apt-get)和 <a href="https://www.powershellgallery.com/">Powershell Gallery</a> (Powershell module集中地)其實都是nuget的同分支出來的服務。 </div> <div class="bs-callout bs-callout-info"> <h4 id="WizKMOutline_1457800186765251">Nuget詞不同含義</h4>需要注意，在不同情境下面，nuget可能有不同含義。總共兩種情況：  <ol> <li>程式本身 - 有時候提到nuget指的是package management這個程式  </li><li>微軟預設的package來源 - 因為nuget server其實可以自己建制，有些服務項<a href="https://myget.org/">MyGet</a>可以提供私人的nuget server。所以nuget有時候指的是微軟預設提供的那個資源的<a href="https://www.nuget.org/packages">Nuget Package</a>的位置</li></ol></div></section><section> <h2 id="WizKMOutline_1457800186765961">爲什麽要有nuget</h2> <p>nuget主要解決： </p> <ol> <li>更好在不同專案之間使用同個package的不同版本  </li><li>讓開發者或者做自動化建制的時候，能夠不用做任何事情專案就能夠執行  </li><li>處理library之間的相依性。例如要用xxx需要有yyy，而且這個xxx和yyy還有可能有版本問題  </li><li>升級library的版本</li></ol> <p>可以想像一下，在沒有nuget的時代。如果你想用一個第三方的library，通常做法是執行exe或者msi來把library裝到電腦的GAC。不過這個有幾個問題： </p> <ol> <li>因為在GAC，如果別的開發者也要開發，但是他沒裝過怎麼辦？如果文件寫的好還可以參照文件知道要安裝，但是如果沒寫好呢？  </li><li>如果同個library，在不同專案要使用不同版本，是不是要安裝好多個exe？  </li><li>如果要把系統放到別的環境執行，每一次都要安裝library，如果文件沒寫好，安裝的人不知道呢？</li></ol> <p>這些問題，在nuget的到來都解決了。 </p></section><section> <h2 id="WizKMOutline_1457800186765189">nuget一些特性</h2> <ul> <li>nuget是跟著專案走 - 所以專案需要的package可以跟專案走  </li><li>package之間的相依性會自動處理。例如，今天要裝一個Asp .net Mvc，nuget會自動連Json.Net也裝上，因為那個是其中一個相依  </li><li>這個專案裝了什麽package會在一個 <code>package.config</code>做記錄(.Net core用的名稱不同) - 當專建制的時候，如果package.config提到的package不存在的話，會自動下載package。</li></ul></section><section> <h2 id="WizKMOutline_1457800186765174">如何使用nuget</h2> <p>nuget有兩種使用方式： </p> <ol> <li>用GUI  </li><li>用Package Manager Console</li></ol> <h3 id="WizKMOutline_1457800186766844">1. 使用GUI</h3> <p>Visual Studio 2013 和 Visual Studio 2015的畫面不太一樣，但是操作都差不多。 </p> <p>在安裝的時候注意安裝到的<strong><em>專案</em></strong>其他就還蠻直覺。舉例今天安裝常用的<code>Json.Net</code>套件： </p> <h4 id="WizKMOutline_1457800186766199">1.1 安裝package</h4> <p>右鍵點選專案，選擇 <kbd>Mange Nuget Package(管理nuget套件)</kbd></p> <p><a href="https://lh3.googleusercontent.com/-XVczOxmcJf4/VuRIc4d6kNI/AAAAAAAAUj4/lMUYmjoaFq0/s1600-h/image%25255B2%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb(1).png" width="409" height="484" class="img-responsive"></a></p><figure><figcaption>打開nuget package manager</figcaption></figure>  <p>預設會選取左邊頁簽(VS 2015是上面)<kbd>Online</kbd>，這個時候可以在右上角的輸入框來輸入要搜索的套件。在確定安裝前，在上面的下拉選單可以切換是否接受 <kbd>Pre Realse (預覽版)</kbd>的版本。 </p><figure><figcaption><a href="https://lh3.googleusercontent.com/-_h19oHhpZ3M/VuRIgXkIK5I/AAAAAAAAUkA/4mqrTh8xRgU/s1600-h/image%25255B5%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[1](1).png" width="644" height="380" class="img-responsive"></a>VS 2013 安裝畫面</figcaption></figure> <figure><figcaption><a href="https://lh3.googleusercontent.com/-Lc8zJi3vEDc/VuRIjJ98hdI/AAAAAAAAUkI/ctmHljZiGEU/s1600-h/image%25255B8%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[2](1).png" width="644" height="347" class="img-responsive"></a>VS 2015 安裝畫面</figcaption></figure><br> <p>可以看到VS 2015 的版本多上了可以選擇要安裝的Version，而2013只能夠裝最新版本。 </p> <h4 id="WizKMOutline_1457800186766506">1.2 刪除package</h4> <p>在頁簽的<kbd>Installed</kbd>裡面會列出目前有安裝的package，不要的直接點<kbd>Uninstall</kbd>即可。 </p><figure><figcaption> <p><a href="https://lh3.googleusercontent.com/-M6ykJEz60ug/VuRIpEwSUCI/AAAAAAAAUkQ/du97SMbJ1fw/s1600-h/image%25255B11%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[3](1).png" width="644" height="380" class="img-responsive"></a>VS 2013畫面</p> <p><a href="https://lh3.googleusercontent.com/-fAEM6JQ49lM/VuRItJM1EuI/AAAAAAAAUkY/Q4US7RaRbao/s1600-h/8f46acf7-751f-44c3-9f40-f4a1313dd270%25255B3%25255D.png"><img title="8f46acf7-751f-44c3-9f40-f4a1313dd270" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="8f46acf7-751f-44c3-9f40-f4a1313dd270" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/8f46acf7-751f-44c3-9f40-f4a1313dd270_thumb.png" width="409" height="484" class="img-responsive"></a></p></figcaption></figure><figure><figcaption>VS 2015畫面</figcaption></figure><p></p> <h4 id="WizKMOutline_1457800186766429">1.3 更新package</h4><figure><figcaption> <div><a href="https://lh3.googleusercontent.com/-13bbl6sJyPE/VuRIwj-F9mI/AAAAAAAAUkg/hwNcKyFJhYE/s1600-h/image%25255B14%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[4](1).png" width="644" height="380" class="img-responsive"></a>VS 2013畫面</div> <div></div></figcaption></figure><figure><figcaption><a href="https://lh3.googleusercontent.com/-Ybq23lL98AM/VuRI0qds2EI/AAAAAAAAUko/lVwDUYeBQIQ/s1600-h/image%25255B17%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[5](1).png" width="644" height="347" class="img-responsive"></a>VS 2015畫面</figcaption></figure> <p>在頁簽<kbd>Update</kbd>可以看到那些版本是可以更新的。在VS 2015更可以選擇要更新的版本(甚至降板) </p> <h3 id="WizKMOutline_1457800186766808">2. Package Manager Console</h3> <div><figure><figcaption><a href="https://lh3.googleusercontent.com/-Ke7RZM4XOlU/VuRI4JX6-tI/AAAAAAAAUkw/E3DDiY0CiBY/s1600-h/image%25255B20%25255D.png"><img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[6](1).png" width="644" height="346" class="img-responsive"></a>開啟Package Manager Console</figcaption></figure></div> <p>Package Manager Console 其實就是Powershell。透過這種方式安裝有兩個好處： </p> <ol> <li>如果知道Package名稱 - 速度比較快。因為UI還要搜索  </li><li>可以傳入參數。例如用<code>--version</code>來表示要安裝的版本，<code>--force</code>強制刪掉某一個package(忽略這個package的相依package) - 方便更新package版本</li></ol> <h4 id="WizKMOutline_1457800186766607">2.1 安裝package</h4> <p>基本上語法就是 <code>Install-package {packageName}</code>例如： </p> <p><code>Install-Package Newtonsot.Json</code></p> <h4 id="WizKMOutline_1457800186766733">2.2 刪除package</h4> <p>基本上語法就是 <code>Uninstall-package {packageName}</code>例如： </p> <p><code>Uninstall-Package Newtonsot.Json</code></p></section><section> <h2 id="WizKMOutline_1457800186766724">如何回覆package</h2> <p>基本上有3種做法： </p> <ol> <li>對專案設定package restore - 2.7 之前的做法  </li><li>nuget 2.7 之後，什麼都不用做 - <strong><em>建議做法</em></strong>  </li><li>使用nuget.exe呼叫 <code>nuget restore</code> (在專案的資料夾下執行，會自動找到對應的sln並且回復package)</li></ol> <h3 id="WizKMOutline_1457800186766767">做法1.：對專案設定package restore</h3> <p>在之前版本的nuget，要回覆nuget package需要做一些設定，並且把產生出來的<code>.nuget</code>資料夾要放到版控才可以。 </p> <p><a href="https://lh3.googleusercontent.com/-TVCZ5COh3AA/VuRLqO3NK3I/AAAAAAAAUlE/D5Axs1ZHEgQ/s1600-h/image%25255B3%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2016-03-13-what-is-nuget-how-to-use-nuget-and-how-to-restore-properly_Asset/image_thumb[1](1).png" width="372" height="369" class="img-responsive"></a></p> <p>這種做法有2個問題： </p> <ol> <li>這個做法是在專案<strong><em>Build(建制)的時候</em></strong> 在回覆不存在的package。因為是在Build的時候做，所以第一次build會失敗，因為package還沒下載好。  </li><li>版控要記錄<code>.nuget</code>資料夾</li></ol> <p>第一個問題比較嚴重，像之前我第一次接觸自動建制，就因為這個卡住。 </p> <p>因為這個原因，在nuget 2.7之後改變回覆package的做法。 </p> <p>如果看到這篇，請大家告訴大家，<strong><em>建議不要在用上面描述那種方式做nuget回覆</em></strong>。 </p> <h3 id="WizKMOutline_1457800186766473">做法2.建議：nuget 2.7之後的做法 - 什麼都不用做</h3> <p>nuget 2.7之後的回覆方式就是：<strong><em>什麽都不需要做</em></strong>。沒錯，沒看錯，什麽都不需要做，只要建制，Visual Studio就會自己在 Build<strong><em>之前</em></strong>先把缺少的nuget package下載好。所以，如果有任何package需要在build的時候觸發，完全不會有問題。 </p></section><section> <h2 id="WizKMOutline_1457800186766218">什麽檔案應該進入版控</h2> <p>在官方建議的.gitignore設定是： </p><pre class="brush: ps;"><code class="language-powershell line-numbers"># 忽略 NuGet Packages
*.nupkg
# 忽略下載 packages 的資料夾 
**/packages/*
# 但是保留 build/ 資料夾, 用作於package的 MSBuild target.
!**/packages/build/
# 下面這行可有可無 - 就算沒有也會自動產生
#!**/packages/repositories.config
 </code></pre></section><section><h2 id="WizKMOutline_1457800186766720">結語</h2><p>希望透過這篇，可以讓從來沒有接觸nuget的使用者瞭解並且知道爲什麽要使用nuget，瞭解nuget帶來的好處和如何在新版本回覆package。 </p><p>今天介紹的是如何使用nuget，在未來在介紹如何建立一個nuget package，把各位常用的自己寫的package能夠透過nuget在不同專案方便使用。 </p></section>