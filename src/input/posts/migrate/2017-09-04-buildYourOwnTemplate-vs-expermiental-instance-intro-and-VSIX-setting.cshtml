Title: "[打造自己的template-建立一致性程式碼][08]Visual Studio Experimental Instance 和 VSIX template的細節設定介紹"
Published: 2017-09-04
Modified: 2017-09-04
Image: /posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb(31).png
Tags: ["visual studio","「打造自己的template-建立一致性程式碼」"]
RedirectFrom: 2017/09/buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting.html
Series: ["「打造自己的template-建立一致性程式碼」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-9lsS1AgHskU/Wa1xhRtH87I/AAAAAAAAWSE/loEjgv1gkMMbHha8mb7z4F0WT7exMd4agCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="Visual Studio Experimental Instance 和 VSIX template的細節設定介紹" style="display: inline; background-image: none;" alt="Visual Studio Experimental Instance 和 VSIX template的細節設定介紹" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb(31).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></figure></section><section><p>  在上篇（<a href="http://blog.alantsai.net/2017/09/buildYourOwnTemplate-create-item-template.html">[07]匯出template建立小總結，更好的建立方式介紹 VSIX</a>）介紹了如何透過VSIX的方式建立一個Visual Studio（以下簡稱VS）的套件來安裝template。   </p><p>  在這篇則會針對測試用的<code>Experimental Instance</code>和VSIX建立方式的一些小地方做延伸介紹。   </p></section><section><div class="bs-callout bs-callout-default">匯出用的範例程式碼 <a href="https://github.com/alantsai-samples/mhat-visualstudio-template/releases/tag/sample%2Fchapter08">github mhat-visualstudio-template sample/chapter08</a></div></section>   <section> <a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678272" ;="">VS Experimental Instance</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678741" ;="">VS Experimental Instance的cache位置</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678396" ;="">如何reset Experimental Instance</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678442" ;="">如何手動執行Experimental Instance</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678846" ;="">VSIX template和匯出Template的不同之處</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678530" ;="">如何設定template的分類</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678475" ;="">是否能夠建立Multi Project （多專案） Template</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678326" ;="">VS Experimental Instance沒有出現 - 注意tempalte路徑長度</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1504538766678366" ;="">結語</a><br></li></ul></div></section>   <a name="more"></a><section><h2 id="WizKMOutline_1504538766678272">VS Experimental Instance</h2><p>  之前透過匯出的方式建立template的時候有個討厭的地方是更新template比較麻煩，因為測試的時候會直接安裝到正常在使用的VS，可能會造成混亂。   </p><p>  因為擔心這種情況，所以在VS在預設執行VSIX的時候會開啟<code>Experimental Instance</code> - 這個可以想象成和一般VS一樣，只是設定是和一般的分開。有點像是進入Windows可以有多個使用者，使用者和使用者之間的設定   不會互相干擾。   </p><h3 id="WizKMOutline_1504538766678741">VS Experimental Instance的cache位置</h3><p>  還記得之前在介紹更新templatecache的時候有提到VS會有一個cache的地方儲存一些相關資訊（<a href="http://blog.alantsai.net/2017/08/buildYourOwnTemplate-understand-vstemplate-make-vs-refresh-template-cache.html#WizKMOutline_1503822127931725">[04]了解vstemplate來微調匯出的Template和強制VS更新Template的方式#更新template - 如何讓vs重新刷新</a>）。Experimental Instance也有這個概念，位置在：<code>%appdata%\Microsoft\VisualStudio\{VS版本}_{後面幾個奇怪數字}Exp</code></p><figure><a href="https://lh3.googleusercontent.com/-TwbKD45532Y/Wa1xjSeJJ9I/AAAAAAAAWSM/ETw25YTuhoctEa8-u2CDx4tUPyhMRKUpQCHMYCw/s1600-h/image%255B5%255D"><img width="654" height="349" title="cache的截圖位置" style="display: inline; background-image: none;" alt="cache的截圖位置" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[1](28).png" border="0" class="img-responsive"></a><br><figcaption>cache的截圖位置</figcaption></figure><p>  所以假設有需要手動清理cache可以到這個資料夾處理。   </p><h3 id="WizKMOutline_1504538766678396">如何reset Experimental Instance</h3><p>  假設開發很多個VSIX或者甚至一些客制VS功能的套件導致Experimental Instance有點怪怪的情況下，可以reset Experimental Instance（把這個VS Experimental Instance還原到最一開始的情況）   </p><p>  可以透過在Windows 裡面搜索<code>Reset the Visual Studio 2017 Expermiental Instance</code>，執行之後就會回到預設狀態。   </p><figure><a href="https://lh3.googleusercontent.com/-GUfsY1Fah0Y/Wa1xlFdn65I/AAAAAAAAWSU/WDcp0bBT-DgcNzGCrAA1ZJmHoIKgynvYwCHMYCw/s1600-h/image%255B8%255D"><img width="604" height="392" title="找到reset的執行cmd" style="display: inline; background-image: none;" alt="找到reset的執行cmd" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[2](22).png" border="0" class="img-responsive"></a><br><figcaption>找到reset的執行cmd</figcaption></figure><div class="bs-callout bs-callout-info">   不確定reset的作用是不是就只是是把vs Experimental instance的cache資料夾的所有內容刪掉，但是如果執行完reset去cache看看，會發現整個資料夾是空的。   </div><h3 id="WizKMOutline_1504538766678442">如何手動執行Experimental Instance</h3><p>  假設有天希望直接測試有安裝的template，可以透過直接開啟VS Experimental Instance達到。   </p><p>  執行方式也很簡單，在Windows裡面搜索<code>Start Experimental Instance of Visual Studio 2017</code>。   </p><figure><a href="https://lh3.googleusercontent.com/-UXMzgk5DYg0/Wa1xmzA0dUI/AAAAAAAAWSc/q9srAlTHScUqDZ0h-ox4dRMmki09y1glQCHMYCw/s1600-h/image%255B11%255D"><img width="620" height="525" title="開啟VS 2017 Experimental Instance" style="display: inline; background-image: none;" alt="開啟VS 2017 Experimental Instance" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[3](19).png" border="0" class="img-responsive"></a><br><figcaption>開啟VS 2017 Experimental Instance</figcaption></figure></section><section><h2 id="WizKMOutline_1504538766678846">VSIX template和匯出Template的不同之處</h2><p>  當建立template從匯出改成用VSIX之後，有幾個地方需要注意一下：   </p><ol><li>如何設定template的<code>分類</code></li><li>是否能夠建立Multi Project（多專案）Template</li><li>VS Experimental Instance沒有出現 - 注意tempalte路徑長度</li></ol><section><h3 id="WizKMOutline_1504538766678530">如何設定template的分類</h3><p>   還記得如果是匯出Template的話，分類是<em>依照放的資料夾結構</em>來建立出分類，可是到了VSIX沒有辦法控制資料夾了阿，怎麼設定template出現的分類呢？    </p><p>   在Project Template的<code>vstemplate</code>檔案，開啟<code>Property</code>（可以用<kbd>F4</kbd>或者 右鍵 選擇 <code>Property</code>），然後<code>Category</code>那個欄位輸入要的分類。    </p><p>   如果分類有多層，就用反斜線<code>\</code>區隔，例如：<code>myVsix\test</code>。    </p><figure><a href="https://lh3.googleusercontent.com/-JlqWe_mBXBA/Wa1xqG_Bf6I/AAAAAAAAWSk/G8KPMxEoE1kb5S87V3jr9OeEPUtb68iiQCHMYCw/s1600-h/image%255B14%255D"><img width="654" height="480" title="設定分類" style="display: inline; background-image: none;" alt="設定分類" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[4](19).png" border="0" class="img-responsive"></a><br><figcaption>設定分類</figcaption></figure></section><section><h3 id="WizKMOutline_1504538766678475">是否能夠建立Multi Project （多專案） Template</h3><p>   可以的，做法其實和我們建立之前的Project Template方式一樣，只是這次<code>buildAction</code>設定成為<code>VSTemplate</code>會是根的那個。    </p><figure><a href="https://lh3.googleusercontent.com/-Tg9mjW6PQ4w/Wa1xuIkk2sI/AAAAAAAAWSs/0mokSp5ePAYFXWbtOMe9IUQyWlQN6qAOACHMYCw/s1600-h/image%255B17%255D"><img width="478" height="542" title="multi project template" style="display: inline; background-image: none;" alt="multi project template" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[5](12).png" border="0" class="img-responsive"></a><br><figcaption>multi project template</figcaption></figure></section><section><h3 id="WizKMOutline_1504538766678326">VS Experimental Instance沒有出現 - 注意tempalte路徑長度</h3><p>   如果run的時候VS Experimental Instance沒有出現 - 有可能有出現錯誤。    </p><p>   這個時候注意<code>Error</code>那邊有沒有出現錯誤，例如<code>Problem occurred while extracting the vsix to the experimental extensions path</code></p><figure><a href="https://lh3.googleusercontent.com/-bVI2h4v4IB4/Wa1x1zkd5HI/AAAAAAAAWS0/4JXnS2O8K0ofu8w8fBCXrV73kAJcfeOiwCHMYCw/s1600-h/image%255B20%255D"><img width="654" height="163" title="錯誤截圖" style="display: inline; background-image: none;" alt="錯誤截圖" src="/posts/migrate/2017-09-04-buildYourOwnTemplate-vs-expermiental-instance-intro-and-VSIX-setting_Asset/image_thumb[6](9).png" border="0" class="img-responsive"></a><br><figcaption>錯誤截圖</figcaption></figure><p>   非常有可能是template裡面的路徑<em>過長</em>導致。如果VSIX的名稱很長，也有可能導致路徑過長。因為VS的cache路徑本身就蠻長的。    </p><p>   所以一定要注意路徑，尤其是有時候使用一些第三方套件，很有可能路徑過長導致有問題。    </p></section></section><section><h2 id="WizKMOutline_1504538766678366">結語</h2><p>  在這篇介紹了VS的Experimental Instance和匯出Template不同之處的地方。   </p><p>  到這邊其實VSIX的template包裝方式基本上已經到一個段落（雖然還有Item Template的沒有介紹，不過概念是一樣的），會發現相較於匯出Template的方式，在管理上面和安裝上面變的更加簡單。   </p><p>  但是還是有些不便利的地方，這也就是<code>SideWaffle</code>帶來的好處。   </p><p>  在下一篇將會對於vsix的這種方式的缺點和SideWaffle的一些基本介紹。 </p><div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:ee817909-dfbb-413d-b313-db4081aa314e" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84template-%e5%bb%ba%e7%ab%8b%e4%b8%80%e8%87%b4%e6%80%a7%e7%a8%8b%e5%bc%8f%e7%a2%bc%e3%80%8d" rel="tag">「打造自己的template-建立一致性程式碼」</a>,<a href="/tags/Visual+Studio" rel="tag">Visual Studio</a></div></section>