Title: "[.net framework 工程師看.net core][03]工程師的語言 C#"
Published: 2017-10-21
Modified: 2017-10-21
Image: /posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb(48).png
Tags: ["「net framework工程師看net core」",".net","csharp"]
RedirectFrom: 2017/10/net-framework-see-new-core-03-csharp-programmer-language.html
Series: ["「net framework工程師看net core」"]
---
<section><figure><a href="https://lh3.googleusercontent.com/-XZCvIWLVmVI/WeqThY7WDII/AAAAAAAAWuM/ul9fWilCOuk9u8EzhIhRn2J3IA6kyHHRgCHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb(48).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></figure></section><section><p>  在上一篇介紹完了.Net Framework的概觀(<a href="http://blog.alantsai.net/2017/10/net-framework-see-new-core-02-net-framework-overview.html">起源.Net Framework</a>) - 在這一篇將會介紹和.Net Framework一起誕生的語言：C#   </p><p>  將會了解到C#版本的歷史、主要版本之間的功能差異和.Net Compiler Platform (Roslyn) 帶來的差異   </p></section><section><a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429115" ;="">C#是什麼</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429322" ;="">C#版本功能</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429432" ;="">.Net Framework如何執行C#程式</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429312" ;="">除了C#以外的其他.Net Framework語言</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429752" ;="">compiler的進化</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1508544321429933" ;="">結語</a><br></li></ul></div></section><a name="more"></a><section><h2 id="WizKMOutline_1508544321429115">C#是什麼</h2><p>  C#（唸法：C Sharp）是一個語法結構類似Java的OO語言。和.Net Framework一起誕生出來，可以說C#是.Net 開發的第一語言。   </p><p>  目前組新的版本是 C# 7.1   </p></section><section><h2 id="WizKMOutline_1508544321429322">C#版本功能</h2><p>  基本上C#會和某一個.Net Framework版本搭配，並且也會搭配某一個Visual Studio (VS) 版本一起release。   </p><div class="bs-callout bs-callout-info"><p>   和VS一起release的原因是有些語法糖的修改，舉例來說VS 2015就不支援C# 7.0的語法 - 在VS 2015上面會出現好像錯誤，但是可以透過更新.Net Compiler Platform來達到<em>編譯成功</em>。    </p><p>   相關可以參考：<a href="http://blog.alantsai.net/2017/03/visualstudio2015-build-Csharp7.html">[Visual Studio]如何在Visual Studio 2015使用C#7的功能？</a></p></div><figure><figcaption><a href="https://lh3.googleusercontent.com/-83fiVsAoOrw/WeqTlqxDhvI/AAAAAAAAWuU/rhGFse99oIQFCpTuk9uYFhezPhHOwVdIACHMYCw/s1600-h/image%255B5%255D"><img width="654" height="333" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb[1](41).png" border="0" class="img-responsive"></a></figcaption><figcaption>C# 和 .Net 版本對應和版號。     來源：http://www.webdevelopmenthelp.net/2015/06/new-features-in-csharp-6.html</figcaption></figure><p>  每一個Release基本上都會有一個主要的主題：   </p><ol><li>2.0 - 加入 泛型(Generic)因為如此1和2不兼容</li><li>3.0 - 加入 Linq</li><li>4.0 - 加入 dynamic</li><li>5.0 - 加入 async await</li><li>6.0 - 比較偏語法糖(syntax sugar)類型的修改</li><li>7.0 - 比較偏語法糖(syntax sugar)類型的修改</li></ol><div class="bs-callout bs-callout-info">   更多版本之間的差異可以參考：<a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history">The history of C#</a></div></section><section><h2 id="WizKMOutline_1508544321429432">.Net Framework如何執行C#程式</h2><figure><a href="https://lh3.googleusercontent.com/-HLC_MGnUUQo/WeqTpGyUWSI/AAAAAAAAWuc/rwuAzjSdBa0dxKwZuZuGmgbDWkFtVXyKACHMYCw/s1600-h/image%255B8%255D"><img width="654" height="285" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb[2](35).png" border="0" class="img-responsive"></a><br><figcaption>整個編譯和執行過程</figcaption></figure><p>  C#經過編譯器(compiler)編譯之後產生的是所謂的Intermediate Language (IL)，最後當使用者執行的時候，CLR在把 IL run 起來透過及時編譯(JIT compile)變成機器碼(machine code)執行在機器上面。   </p><p>  由於run 起來的CLR會幫忙管理底層的一些資源，例如memory的管理，因此C# 又稱之為managed code。   </p></section><section><h2 id="WizKMOutline_1508544321429312">除了C#以外的其他.Net Framework語言</h2><p>  精準一點說，.Net Framework (CLR) 支援的語言只有一種，那就是 IL。   </p><p>  不過.Net Framework一起帶來的工具裡面包含compiler支援3種語言編譯成為IL：   </p><ol><li>C#</li><li>VB .Net - 語法類似VB6，當初.Net剛出來希望鼓勵大家轉.Net因此提供</li><li>F# - 偏Functional Programing的語言，Serverless的服務Azure Function就有支援</li></ol><p>  不管是這三種語言的那種，最後compile之後(不管是exe還是dll)都是IL - 因此3種語言的結果是可以<em>互相使用</em>。換句話說，VB .Net寫的Library，可以直接在C#的console使用。   </p></section><section><h2 id="WizKMOutline_1508544321429752">compiler的進化</h2><p>  在早期版本的C# compiler是和.Net Framework一起安裝的，這個compiler的程式名稱是<code>csc.exe</code>。   </p><p>  不過因為很多原因(例如更容易做meta programing等好處)，後來compiler被獨立出來，變成一個自己的專案叫做.Net Compiler Platform (aka Roslyn) (<a href="https://github.com/dotnet/roslyn">官方repo</a>)。   </p><figure><a href="https://lh3.googleusercontent.com/-eJQSw67lBF0/WeqTuxdZj4I/AAAAAAAAWuk/nw3JHxmHjZ8ZcUTYWSFJnKatYeA1iYMzgCHMYCw/s1600-h/image%255B11%255D"><img width="654" height="159" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb[3](32).png" border="0" class="img-responsive"></a><br><figcaption>.Net Framework的csc只有支援到C# 5</figcaption></figure><p>  因為這個原因，所以<em>C# 6.0</em>以上的compiler使用的都是Roslyn。   </p><p>  Roslyn的一個好處是，能夠用nuget package安裝並且在編譯的時候自動使用<em>nuget裝的版本</em>，而不是電腦安裝的版本。這個在CI建制上也更加方便。   </p><figure><a href="https://lh3.googleusercontent.com/-3Zl25ms05nI/WeqTyHP3NXI/AAAAAAAAWus/-UgCQf88L88-VtVmB0c9d09yZU73HRVbgCHMYCw/s1600-h/image%255B14%255D"><img width="532" height="506" title="image" style="margin: 0px; display: inline; background-image: none;" alt="image" src="/posts/migrate/2017-10-21-net-framework-see-new-core-03-csharp-programmer-language_Asset/image_thumb[4](31).png" border="0" class="img-responsive"></a><br><figcaption>可以看到Roslyn和bin包在了一起，並且Roslyn還是保留了<code>csc.exe</code></figcaption></figure></section><section><h2 id="WizKMOutline_1508544321429933">結語</h2><p>  在這篇對於C#的基本功能有做了基本的介紹，並且也對Roslyn - 新的compiler做了基本介紹。   </p><p>  對於整個.Net平台和開發的語言C#應該有了一些基本的概念了之後，接下來就可以看一下.Net Core的平台概觀和.Net Framework有什麼不同。   </p></section><section>    <div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:5dcb682f-9746-4220-954c-73a0c4d855f5" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8cnet+framework%e5%b7%a5%e7%a8%8b%e5%b8%ab%e7%9c%8bnet+core%e3%80%8d" rel="tag">「net framework工程師看net core」</a>,<a href="/tags/.net" rel="tag">.net</a>,<a href="/tags/C%23" rel="tag">C#</a></div></section>