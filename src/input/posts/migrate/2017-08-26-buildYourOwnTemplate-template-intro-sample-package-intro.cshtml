Title: "[打造自己的template-建立一致性程式碼][02]了解template類型和建立出要變成範本的程式"
Published: 2017-08-26
Modified: 2017-08-27
Image: /posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb(25).png
Tags: ["visual studio","「打造自己的template-建立一致性程式碼」","csharp"]
RedirectFrom: 2017/08/buildYourOwnTemplate-template-intro-sample-package-intro.html
Series: ["「打造自己的template-建立一致性程式碼」"]
---
<section><a href="https://lh3.googleusercontent.com/-MEdbLDhFS9A/WaGUXtVyNqI/AAAAAAAAWJI/5MmL3Y9g3bcRMZ0yPsvLpd438uFkmnymACHMYCw/s1600-h/image%255B2%255D"><img width="654" height="290" title="[打造自己的template-建立一致性程式碼][02]了解template類型和建立出要變成範本的程式" style="display: inline; background-image: none;" alt="[打造自己的template-建立一致性程式碼][02]了解template類型和建立出要變成範本的程式" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb(25).png" border="0" class="img-responsive"></a><br><figcaption>圖片來源：https://pixabay.com/en/annual-report-book-brochure-686343/</figcaption></section><section><p>  上篇了解了template的重要性之後，在這篇將會先介紹Visual Studio裡面的兩種Template：Project Template和Item Template。   </p><p>  了解完兩種template類型之後，將會開始打造我們的template。這邊會以一個我自己的的open source console專案作為之後範本的目標，然後建立出一個實用這個套件的簡單console程式，未來會被用來做於template。   </p></section><section><div class="bs-callout bs-callout-default">    sample 程式在 <a href="https://github.com/alantsai-samples/mhat-visualstudio-template/releases/tag/sample%2Fchapter02&quot;">github mhat-visualstudio-template sample/chapter02</a></div></section><section><a name="KMContentPageTopID" id="KMContentPageTopID"></a><div id="divKMOutline" style="border-style: groove none; margin: 10px 0px;"><ul style="margin: 0px 0px 0px 20px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079102608" ;="">Template類型</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103871" ;="">Project Template</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103263" ;="">Item Template</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103588" ;="">準備建立自己的Project Template</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103149" ;="">快速介紹MHAT-ConsoleApp-ProcessTemplate專案</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103985" ;="">準備未來範本長的樣子</a><br></li><ul style="margin: 0px 0px 0px 30px;"><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103147" ;="">1. 建立一個一般的Console程式</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103671" ;="">2. 安裝套件 MHAT.ConsoleApp.ProcessTemplate</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103604" ;="">3. 最後調整應該要包含的檔案</a><br></li></ul><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103935" ;="">測試剛剛建立的程式</a><br></li><li><a style="line-height: 1.6; font-size: 15px;" href="#WizKMOutline_1503761079103211" ;="">結語</a><br></li></ul></div></section><a name="more"></a><section><h2 id="WizKMOutline_1503761079102608">Template類型</h2><p>  在Visual Studio（之後都統稱VS）裡面有兩種template：   </p><ol><li>Project Template</li><li>Item Template</li></ol><section><h3 id="WizKMOutline_1503761079103871">Project Template</h3><p>   當我們開啟VS之後，做的第一件事情一定是<code>File</code> &gt; <code>New</code> &gt; <code>Project</code>。   </p><p>   這個時候會打開一個視窗，裡面可以選的範本就是所謂的Project Template。    </p><a href="https://lh3.googleusercontent.com/-4IL5fm8ehQM/WaGUZg89xII/AAAAAAAAWJQ/x5kLwLfafKwpzVXFqSgTR-FvYszdotZbQCHMYCw/s1600-h/image%255B5%255D"><img width="654" height="190" title="file new project畫面" style="display: inline; background-image: none;" alt="file new project畫面" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[1](22).png" border="0" class="img-responsive"></a><figure><a href="https://lh3.googleusercontent.com/-scuc8m5CpkU/WaGUcC0wM9I/AAAAAAAAWJY/qnuH5dKCkjY5pCRNoPwvswZ-mjBtso0hQCHMYCw/s1600-h/image%255B8%255D"><img width="654" height="375" title="選project的視窗" style="display: inline; background-image: none;" alt="選project的視窗" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[2](16).png" border="0" class="img-responsive"></a><br><figcaption>file new project和選project的視窗</figcaption></figure><p>   從選範本的視窗可以看出，會先依照語言類型（例如C#還是Visual Basic）然後裡面會在分例如Web還是.Net等。    </p></section><section><h3 id="WizKMOutline_1503761079103263">Item Template</h3><p>   當我們建立好Project之後，會開始建立檔案，例如要在加入一個cs檔案 - 這個時候我們會對要加入的<em>資料夾</em>（或<em>專案</em>;如果是根目錄）點<kbd>右鍵</kbd> <code>Add</code> &gt; <code>New Item</code>。    </p><p>   這個時候會跳出一個視窗讓你選要建立的類型。這些範本就是所謂的Item Template    </p><figure><figcaption><a href="https://lh3.googleusercontent.com/-Icz3FDhQTHw/WaGUd2FnuXI/AAAAAAAAWJg/N8z1Q8yAm5w4yfhF-uA-s3fHHvCf4kQ3ACHMYCw/s1600-h/image%255B11%255D"><img width="654" height="209" title="Add New item" style="display: inline; background-image: none;" alt="Add New item" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[3](13).png" border="0" class="img-responsive"></a><br></figcaption><figcaption><a href="https://lh3.googleusercontent.com/-5FA7xSXFfaI/WaGUfg9w3PI/AAAAAAAAWJo/LkhuZB_zLrIvHf2Y9HH7CYkUDiIOym5IACHMYCw/s1600-h/image%255B14%255D"><img width="654" height="375" title="item template視窗" style="display: inline; background-image: none;" alt="item template視窗" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[4](13).png" border="0" class="img-responsive"></a><br></figcaption><figcaption>Add New item和跳出來的視窗</figcaption></figure><p>   依照目前的Project不同呈現的Item Template也會不同，然後裡面也是依照類型區分，例如是web類型。    </p></section></section><section><h2 id="WizKMOutline_1503761079103588">準備建立自己的Project Template</h2><p>  在對Template的類別和這些Template的視窗內容大概長什麼有些了解之後，我們就準備來建立一個自己的Project Template。   </p><p>  在開始介紹如何建立之前，需要先給各位一個情境 - 我們是為了什麼而建立Template？   </p><section><h3 id="WizKMOutline_1503761079103149">快速介紹MHAT-ConsoleApp-ProcessTemplate專案</h3><div class="bs-callout bs-callout-default"><ul><li><a href="https://github.com/alantsai/MHAT-ConsoleApp-ProcessTemplate">Github 專案位置</a></li><li><p><a href="https://www.nuget.org/packages/MHAT.ConsoleApp.ProcessTemplate/">Nuget位置</a></p><p><kbd>Install-Package MHAT.ConsoleApp.ProcessTemplate</kbd></p></li></ul></div><p>  在這邊讓我快速介紹一下這個專案。   </p><p>  相信大家應該都有寫過console，寫console的時候都會遇到幾個問題：   </p><dl><dt>     可以傳什麼參數不清楚，說明也不清楚，參數組合也不清楚    </dt><dd>     一般來說有時候console會因為參數不同功能也不同，在複雜一點還有可能當某個參數有值另外一個參數也要 - 但是搭配別的參數就不一定要。    </dd><dd></dd><dt>     console沒有辦法針對某個階段做處理    </dt><dd><p>    寫過Asp .net就會知道，我們有些想要在request進來要處理，有些是request要出去的時候要做處理。這些是因為asp .net有把不同階段切出來     </p><p>    console則是沒有這個概念，造成了有時候想要在執行實際內容前想要做驗證都要自己切割。     </p></dd><dd></dd><dt>     持續輸入類型的console    </dt><dd>     例如有可能是開著等使用者輸入，輸入一次處理一次直到使用者把程式關掉。    </dd><dd></dd></dl><p>   這些細節每次寫console都要再次處理其實很浪費時間。因此這個專案誕生，讓整個處理變得非常簡單。   </p><p>   這個專案也很適合寫Project Template，未來開console就不用VS內建的版本。   </p></section></section><section><h2 id="WizKMOutline_1503761079103985">準備未來範本長的樣子</h2><p>  既然我們有了情境之後，首先我們先建立出，未來範本建立出來時候長的樣子。   </p><p>  這個專案提供兩種模式：   </p><ol><li>一種是持續輸入類型的</li><li>一種則是<em>執行一次</em>就結束那種</li></ol><p>  這次的範本先建立<em>執行一次</em>就結束。建立步奏如下：   </p><ol><li>建立一個一般的console程式</li><li>透過nuget安裝套件：<kbd>Install-Package MHAT.ConsoleApp.ProcessTemplate</kbd></li><li>最後調整應該要包含的檔案</li></ol><h3 id="WizKMOutline_1503761079103147">1. 建立一個一般的Console程式</h3><p>  首先先建立出一個Console專案：先開VS然後透過<code>New</code> &gt; <code>File</code> &gt; <code>Project</code>建立出一個一般的console程式：   </p><figure><a href="https://lh3.googleusercontent.com/-L3vygbkwU6g/WaGUiiy4nVI/AAAAAAAAWJw/RRCxdVu6syckCaM6CP9kzN_Tb4f3cTdpwCHMYCw/s1600-h/image%255B17%255D"><img width="654" height="375" title="建立一個console程式" style="display: inline; background-image: none;" alt="建立一個console程式" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[5](7).png" border="0" class="img-responsive"></a><br><figcaption>建立一個console程式</figcaption></figure><h3 id="WizKMOutline_1503761079103671">2. 安裝套件 MHAT.ConsoleApp.ProcessTemplate</h3><p>  這個時候透過nuget直接安裝套件 <kbd>Install-Package MHAT.ConsoleApp.ProcessTemplate</kbd></p><figure><a href="https://lh3.googleusercontent.com/-G17HusOdkXw/WaGUmPhOWmI/AAAAAAAAWJ4/BaZa3qPLIfkOVyItIWLqi80fyj8coUwcQCHMYCw/s1600-h/image%255B20%255D"><img width="654" height="448" title="安裝MHAT.ConsoleApp.ProcessTemplate" style="display: inline; background-image: none;" alt="安裝MHAT.ConsoleApp.ProcessTemplate" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[6](5).png" border="0" class="img-responsive"></a><br><figcaption>安裝套件</figcaption></figure><h3 id="WizKMOutline_1503761079103604">3. 最後調整應該要包含的檔案</h3><p>  這個專案的目的是在使用這個套件的時候比較容易，因此我會先定義好一些資料夾結構和一個範例的程式碼讓使用的時候更加方便。   </p><p>  這邊的範例會是建立一個echo的console程式，也就是使用者傳入某個參數，console會把那個參數的內容輸出出來。   </p><p>  在使用這個套件的時候，基本上有3個地方要處理：   </p><dl><dt>     1. 建立一個代表傳入參數的model    </dt><dd><p>    這個會讓我們在取得傳入參數的時候更加方便。     </p><p>    先建立一個<em>資料夾</em>叫做<code>Model</code>，在<code>Model</code>資料夾裡面建立一個cs檔案叫做<code>EchoProcessOption.cs</code>，裡面內容如下：     </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">using CommandLine;

namespace MHAT.ConsoleWithOption.Model
{
    public class EchoProcessOption
    {
        [Option('t', "text", Required = true, HelpText = "要console呈現的內容")]
        public string Text { get; set; }
    }
}</code></pre></dd><dd></dd><dt>     2. 建立一個process    </dt><dd><p>    process讓我們可以做一些不同時間的處理：<code>PreProcess</code>、<code>Process</code>、<code>PostProcess</code>（還有幾個但是沒有列出來）     </p><p>    先建立一個<em>資料夾</em><code>Process</code>，在這個資料夾建立一個cs檔案叫做<code>EchoProcess.cs</code>，裡面內容如下：     </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">using MHAT.ConsoleApp.ProcessTemplate;
using MHAT.ConsoleWithOption.Model;

namespace MHAT.ConsoleWithOption.Process
{
    public class EchoProcess : BaseExecuteProcessTemplate&lt;echoprocessoption&gt;
    {
        protected override void PreProcess()
        {
            Console.WriteLine("準備輸出傳入的參數.....");
            base.PreProcess();
        }

        protected override void Process()
        {
            Console.WriteLine($"您輸入的是：{ArugemntOption.Text}");
            base.Process();
        }

        protected override void PostProcess()
        {
            Console.WriteLine("完成輸出輸入的參數");
            Console.WriteLine("程式關閉");
            base.PostProcess();
        }
    }
}
    </code></pre></dd><dd></dd><dt>     3. 在<code>Program.cs</code>執行<code>EchoProcess</code></dt><dd><p>    這個部分是要執行process的部分，因此在<code>Program.cs</code>裡面調整程式碼如下：     </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">using MHAT.ConsoleWithOption.Process;

namespace MHAT.ConsoleWithOption
{
    class Program
    {
        static void Main(string[] args)
        {
            var process = new EchoProcess();
            process.StartProcess(args);
        }
    }
}</code></pre></dd><dd></dd></dl><figure><a href="https://lh3.googleusercontent.com/-1cUq81X7UMw/WaGUsHmm5zI/AAAAAAAAWKA/lFlbjA3VZEI9YuZXdhZCwTb_6YM_qLs_ACHMYCw/s1600-h/image%255B23%255D"><img width="444" height="332" title="整個建立出來長的樣子" style="display: inline; background-image: none;" alt="整個建立出來長的樣子" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[7](4).png" border="0" class="img-responsive"></a><br><figcaption>整個建立出來長的樣子</figcaption></figure></section><section><h2 id="WizKMOutline_1503761079103935">測試剛剛建立的程式</h2><p>  上面的步奏建立好了之後，build一下，我們就可以測試我們的程式。   </p><p>  開啟一個<code>cmd</code>然後直接執行<kbd>MHAT.ConsoleWithOption.exe</kbd></p><p>  這個時候會出現一個說明畫面，會看到有個參數叫做<code>-t</code>或者<code>-text</code>是必填（Required），主要目的是希望console要印出來的內容。   </p><p>  這時候我們調整，改成輸入<kbd>MHAT.ConsoleWithOption.exe -t "Hello World"</kbd>，這個時候就會列印出我們process裡面寫的pre、process和post裡面的內容。   </p><figure><a href="https://lh3.googleusercontent.com/-dLL9UsDUEII/WaGUu54b5cI/AAAAAAAAWKI/uSbeRTz16rA-CN0CtiZI6Ewh5RtEKIDtQCHMYCw/s1600-h/image%255B26%255D"><img width="654" height="179" title="整個的測試截圖" style="display: inline; background-image: none;" alt="整個的測試截圖" src="/posts/migrate/2017-08-26-buildYourOwnTemplate-template-intro-sample-package-intro_Asset/image_thumb[8](5).png" border="0" class="img-responsive"></a><br><figcaption>整個的測試截圖</figcaption></figure></section><section><h2 id="WizKMOutline_1503761079103211">結語</h2><p>  在這篇先了解了VS裡面的兩種不同的Template：Project Template和Item Template。   </p><p>  再來為了讓我們之後有更好的情境，介紹了一個自己寫的console套件。   </p><p>  依照這個套件寫了一個簡單的echo console程式。這個echo程式的結構就是未來我們建立Project Template的時候希望產生的內容。   </p><p>  在下篇將會透過最簡單的方式產生Project Template - 透過VS的匯出功能。 </p><div class="wlWriterEditableSmartContent" id="scid:77ECF5F8-D252-44F5-B4EB-D463C5396A79:68b877eb-0edb-4415-a9f9-2ab4ebb487b1" style="margin: 0px; padding: 0px; float: none; display: inline;">標籤: <a href="/tags/%e3%80%8c%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84template-%e5%bb%ba%e7%ab%8b%e4%b8%80%e8%87%b4%e6%80%a7%e7%a8%8b%e5%bc%8f%e7%a2%bc%e3%80%8d" rel="tag">「打造自己的template-建立一致性程式碼」</a>,<a href="/tags/C%23" rel="tag">C#</a></div></section>