Title: "[Visual Studio]如何在Visual Studio 2015使用C#7的功能？"
Published: 2017-03-28
Modified: 2017-03-28
Image: /posts/migrate/2017-03-28-visualstudio2015-build-Csharp7_Asset/image_thumb[6](2).png
Tags: ["faq","visual studio","c#"]
RedirectFrom: 2017/03/visualstudio2015-build-Csharp7.html
Series: []
---
<section> <p>隨著Visual Studio 2017發佈之後，C# 7也同時發佈了。 </p><p>C# 7 和 C# 6一樣，帶來都是比較偏幫助開發的時候寫起來更加簡潔的一些寫法，因此很容易就會想要使用來增加易讀性。 </p><p>這個時候如果團隊使用的Visual Studio版本不同，容易就會發生編譯問題，以Visual Studio 2015來說，在編譯C# 7 就會出錯，那是否就不能夠用了呢？ </p></section><section><a id="KMContentPageTopID" name="KMContentPageTopID"></a> <div id="divKMOutline" style="border-top-style: groove; border-left-style: none; border-bottom-style: groove; border-right-style: none; margin: 10px 0px"><ul style="margin: 0px 0px 0px 20px"><li><a style="font-size: 15px; line-height: 1.6" href="#WizKMOutline_1490631898571851" ;="">範例 - out 參數</a><br></li><li><a style="font-size: 15px; line-height: 1.6" href="#WizKMOutline_1490631898571744" ;="">問題</a><br></li><li><a style="font-size: 15px; line-height: 1.6" href="#WizKMOutline_1490631898571833" ;="">解決方式</a><br></li><li><a style="font-size: 15px; line-height: 1.6" href="#WizKMOutline_1490631898571191" ;="">結語</a></li><br></ul></div></section><a name="more"></a><section> <h2 id="WizKMOutline_1490631898571851">範例 - out 參數</h2><p>當我們需要呼叫方法的參數會回傳out的時候，通常來說都會需要先定義才能夠呼叫，例如： </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">int intValue;
int.TryParse("1", out intValue);
Console.WriteLine(intValue);</code></pre><p>C# 7 有提供一種Syntax Sugar可以讓我們不用先定義參數，因此上面範例變成： </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">int.TryParse("1", out int intValue);
Console.WriteLine(intValue);</code></pre></section><section> <h2 id="WizKMOutline_1490631898571744">問題</h2><p>使用C# 7的out參數的確會讓整個寫起來變得更加簡潔，因此很容易就給他用下去了，但是當另外一個開發者使用Visual Studio 2015的時候就會出現編譯錯誤： </p><figure><a href="https://lh3.googleusercontent.com/-4nCFLi8-OWk/WNk-FSCyaLI/AAAAAAAAVqk/hRxrjb46CLw/s1600-h/image%25255B14%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2017-03-28-visualstudio2015-build-Csharp7_Asset/image_thumb[6](2).png" width="704" height="683" class="img-responsive"></a><figcaption>VS 2015編譯錯誤</figcaption></figure></section><section> <h2 id="WizKMOutline_1490631898571833">解決方式</h2><p>因為VS 2015並不了解C# 7的語法，因此VS 2015在build的時候會顯示錯誤。 </p><p>但是實際上C# 7同C# 6一樣，只是使用roslyn compiler編譯過就好，因此其實可以透過安裝roslyn的compiler來讓VS 2015編譯過去。 </p><p>因此，只需要在專案加上 nuget package： </p><kbd>Install-Package Microsoft.Net.Compilers</kbd> <p>這個時候我們再看build結果： </p><figure><a href="https://lh3.googleusercontent.com/-N0Ryer-k1sk/WNk-JOlYCgI/AAAAAAAAVqs/vSs86IHHpTc/s1600-h/image%25255B12%25255D.png"><img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="/posts/migrate/2017-03-28-visualstudio2015-build-Csharp7_Asset/image_thumb[4](8).png" width="704" height="599" class="img-responsive"></a><figcaption>build成功但是VS 2015還是顯示有錯</figcaption></figure> <p>會注意到 雖然build<em>成功</em>但是VS 2015還是會<em>顯示有錯誤</em>。 </p><div class="bs-callout bs-callout-info"><h4 id="WizKMOutline_1490631898571732">Visual Studio 2013編譯C# 6.0</h4><p>其實VS 2013編譯C# 6也會有一樣的問題 - 也可以用同樣方式來解決。 </p></div></section><section> <h2 id="WizKMOutline_1490631898571191">結語</h2><p>C# 7編譯上面差異只在於roslyn compiler，因此可以透過用安裝nuget方式安裝roslyn compiler達到在VS 2015也能編譯C# 7語法。 </p><p>美中不足的地方是VS 2015上面還是會顯示有錯 - 這個目前沒有任何解法。 </p><p>因此最好的開發體驗還是大家一起升級VS 2017是最好。 </p></section>