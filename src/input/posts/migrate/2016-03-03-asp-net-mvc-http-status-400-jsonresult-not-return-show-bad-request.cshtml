Title: "[Asp .Net Mvc]http status 400 的JsonResult在正式機器無法取得回傳的Json資料"
Published: 2016-03-03
Modified: 2016-03-03
Image: /posts/migrate/2016-03-03-asp-net-mvc-http-status-400-jsonresult-not-return-show-bad-request_Asset/image_thumb[8](1).png
Tags: ["asp .net mvc"]
RedirectFrom: 2016/03/asp-net-mvc-http-status-400-jsonresult-not-return-show-bad-request.html
Series: []
---
<a id="KMContentPageTopID" name="KMContentPageTopID"></a> <div id="divKMOutline" style="border-top-style: groove; border-bottom-style: groove; border-right-style: none; margin: 10px 0px; border-left-style: none"> <ul style="margin: 0px 0px 0px 30px"> <li><a href="#WizKMOutline_1457012277950998" ;="">問題描述</a>  </li><li><a href="#WizKMOutline_1457012277962556" ;="">問題原因</a>  </li><li><a href="#WizKMOutline_1457012277962120" ;="">解決辦法</a>  <ul style="margin: 0px 0px 0px 30px"> <li><a href="#WizKMOutline_1457012277962338" ;="">在Web.config設定</a>  </li><li><a href="#WizKMOutline_1457012277962941" ;="">在程式裏面設定</a></li></ul> </li><li><a href="#WizKMOutline_1457012277962691" ;="">修正之前客制的JsonResult</a>  </li><li><a href="#WizKMOutline_1457012277962793" ;="">結語</a></li></ul></div><section> <p>在之前介紹客制JsonResult的時候(<a href="http://blog.alantsai.net/2014/10/BuildYourOwnApplicationFrameworkOnMvc-28-JsonResult-Problem.html">[iThome 第七屆鐵人賽 28] Javascript和Mvc溝通 - 概念篇</a> 和 <a href="http://blog.alantsai.net/2014/10/BuildYourOwnApplicationFrameworkOnMvc-29-JsonResult-Implement.html">[iThome 第七屆鐵人賽 29] Javascript和Mvc溝通 - 實作篇</a><span style="font-size: 14pt; line-height: 1.5">)，其中一個原因是爲了讓回傳的資訊可以利用http裏面的狀態碼(status code)設定為400來表示Json結果是錯誤， 然後前端接到的時候可以直接透過在error事件的function來處理有出錯的邏輯。而不是要在success function裏面透過回傳的json物件來判斷是否有成功。</span></p> <p>在實際使用的時候，開發都沒有什麽問題，但是在正式機器的時候出現bug，會導致沒有辦法取得回傳的<em>Json物件內容</em>。 </p> <p>這篇將會介紹發生的原因和如何處理。 </p></section><a name="more"></a><section> <h2 id="WizKMOutline_1457012277950998">問題描述</h2> <p>在我實際使用上面，在開發階段，<code>return JsonError()</code>，的確會回傳並且狀態是400(因此前端會進入error的function)，並且json物件也有回傳回來。 </p> <p>但是在正式機器並非如此。在正式機器，也一樣會回傳400(所以也會進入error的function)，但是json物件<em>沒有傳送回來</em>。 </p> <p>從下面兩張截圖可以看到，正式機器和測試機器所回傳的內容： <a href="https://lh3.googleusercontent.com/-LvchwtElPeg/VthDy0zDeLI/AAAAAAAAUjI/AAKOxlbbp5A/s1600-h/image%25255B14%25255D.png"><img title="測試機器的Request - 可以看到json資料有回傳回來" class="img-responsive" alt="測試機器的Request - 可以看到json資料有回傳回來" src="/posts/migrate/2016-03-03-asp-net-mvc-http-status-400-jsonresult-not-return-show-bad-request_Asset/image_thumb[8](1).png"></a><br></p><figcaption>測試機器的Request - 可以看到json資料有回傳回來<a href="https://lh3.googleusercontent.com/-6XkjxMcAGHc/VthD2dTVBSI/AAAAAAAAUjQ/-oAh7h37Zy0/s1600-h/image%25255B27%25255D.png"><img title="正式機器的Request - 可以看到json資料沒有回來" class="img-responsive" alt="正式機器的Request - 可以看到json資料沒有回來" src="/posts/migrate/2016-03-03-asp-net-mvc-http-status-400-jsonresult-not-return-show-bad-request_Asset/image_thumb[19](1).png"></a></figcaption><figure><br><figcaption>正式機器的Request - 可以看到json資料沒有回來</figcaption></figure></section><section> <p></p> <h2 id="WizKMOutline_1457012277962556">問題原因</h2> <p>可以看到在正式機器，本來要回傳的json資料沒有回傳回來，只出現<code>錯誤的請求</code>。光這樣看，一時之間還看不出問題。 </p> <p>如果把<code>錯誤的請求</code>翻譯成英文其實就是 <code>Bad Request</code>。這個詞就熟悉多了，不就是http 錯誤碼400的描述文字。 </p> <p>這個時候我的直覺就是，會不會和Asp .Net的客制錯誤訊息頁（CustomError）有沒有關係？ </p></section><section> <h2 id="WizKMOutline_1457012277962120">解決辦法</h2> <p>最後查到一篇<a href="http://stackoverflow.com/questions/22071211/when-performing-post-via-ajax-bad-request-is-returned-instead-of-the-json-resul">SO</a>，的確可能是IIS的Custom Error介入導致，這個時候，其實解決方法就簡單了，就是想辦法不要讓IIS介入就好。 </p> <p>有兩種解決方法： </p> <ol> <li>在Web.config設定  </li><li>在程式裏面處理</li></ol> <h3 id="WizKMOutline_1457012277962338">在Web.config設定</h3>只需要在Web.config裏面放入： <pre class="brush: xml;"><code class="language-markup line-numbers"><system.webserver>
    ...
    <httperrors existingresponse="PassThrough"></httperrors>
    ...
</system.webserver></code></pre>web.config的好處是全域都有效果，但是有可能只是部份想要有這個效果，這個時候程式面的設定方法就會比較好。  <h3 id="WizKMOutline_1457012277962941">在程式裏面設定</h3><p>只要在程式裏面有呼叫： </p><pre class="brush: csharp;"><code class="language-csharp line-numbers">Response.TrySkipIisCustomErrors = true;</code></pre>即可。 </section><section><h2 id="WizKMOutline_1457012277962691">修正之前客制的JsonResult</h2><p>知道了解決方法之後，我們就可以針對之前程式碼的部份，在回傳之前加入<code>Response.TrySkipIisCustomErrors = true;</code> 即可： </p><pre class="brush: csharp;highlight:[15]"><code class="language-csharp line-numbers">protected virtual void SerializeData(HttpResponseBase response)
{
    if (ErrorMessages.Any())
    {
        var originalData = Data;
        Data = new
        {
            Success = false,
            OriginalData = originalData,
            ErrorMessage = string.Join("\n", ErrorMessages),
            ErrorMessages = ErrorMessages.ToArray()
        };
 
        response.StatusCode = 400;
        response.TrySkipIisCustomErrors = true;
    }
 
    var settings = new JsonSerializerSettings
    {
        ContractResolver = new CamelCasePropertyNamesContractResolver(),
 
        Converters = new JsonConverter[]
        {
            new StringEnumConverter(), 
        }
    };
 
    response.Write(JsonConvert.SerializeObject(Data, settings));
}</code></pre></section><section><h2 id="WizKMOutline_1457012277962793">結語</h2><p>有時候寫code真的要特別小心，尤其是這種正式機器才會發生的問題。不過好在，只要能夠抓到關鍵字，直接google大部份都 可以找到結果。 </p></section>