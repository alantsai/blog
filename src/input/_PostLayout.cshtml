@{
    Layout = "_Layout.cshtml";

    var Lead = Model.String(BlogKeys.Lead);
    var Published = Model.Get<DateTime>(BlogKeys.Published);   
    var Modified = Model.Get<DateTime>("Modified"); 
    var Tags = Model.Get<string[]>(BlogKeys.Tags);
}

@section Header {
    @Html.Partial("_PostHeader.cshtml")
}


<div class="row maincontent">

    <div class="col-sm-8 right-border">
        <div class="post-preview">
            <article>

<section class="post-heading">
    <h1>@Model.WithoutSettings.String(BlogKeys.Title)</h1>
    @if(!string.IsNullOrWhiteSpace(Lead))
    {
        <h2 class="subheading">@Lead</h2>
    }            
    <div class="meta">        
        @if (Published != default(DateTime))
        {
            <text>
                <i class="fa fa-calendar fa-fw"></i>@Published.ToString("yyyy-MM-dd dddd")
            </text>
        }

    @if (Tags != null)
    {
        <div class="tags">
            @foreach (string tag in Tags.OrderBy(x => x))
            {
                IDocument tagDocument = Documents[Blog.Tags].FirstOrDefault(x => x.String(BlogKeys.Tag) == tag && x.Get<int>(Keys.CurrentPage) == 1);
                if(tagDocument != null)
                {                
                    <a role="button" href="@Context.GetLink(tagDocument)" class="btn btn-default btn-xs"><i class="fa fa-tag fa-fw"></i>@tag</a>
                }
            }
        </div>     
    } 
    </div>
    @Html.Partial("_partial_fbLike", Model)
</section>
                @RenderBody()
            </article>
        </div>
    </div>

    <div class="col-sm-4 sidebar">
        <hr class="visible-xs-block" />
        @Html.Partial("_Sidebar")
    </div>

</div>

@Html.Partial("_PostFooter.cshtml")

<script type="application/ld+json">
{
  "@@context": "http://schema.org",
  "@@type": "NewsArticle",
  "mainEntityOfPage": {
    "@@type": "WebPage",
    "@@id": "@Context.GetLink(Model, true)"
  },
  "headline": "@Model.String("Title")",
  "image": [
    "http://@(Model.String(Keys.Host))@Model.String("Image")"
   ],
  "datePublished": "@Published.ToString("o")",
  "dateModified": "@Modified.ToString("o")",
  "author": {
    "@@type": "Person",
    "name": "Alan Tsai"
  },
   "publisher": {
    "@@type": "Organization",
    "name": "Alan Tsai",
    "logo": {
      "@@type": "ImageObject",
      "url": "http://blog.alantsai.net/assets/images/profile.jpg"
    }
  },
  "description": "@Model.String("PostDescription")"
}
</script>
